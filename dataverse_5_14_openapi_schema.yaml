openapi: 3.0.0
info:
  title: pyDataverse
  version: 1.0.0
servers:
- url: http://dvn-cloud-app-1.lib.harvard.edu:8080/
  description: Default Server.
- url: http://dvn-cloud-app-1.lib.harvard.edu:8009/
  description: Default Server.
- url: https://dvn-cloud-app-1.lib.harvard.edu:8181/
  description: Default Server.
paths:
  /api/v1/access/datafile/bundle/{fileId}:
    get:
      operationId: datafileBundle
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          type: number
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/BundleDownloadInstance'
  /api/v1/access/datafile/{fileId:.+}:
    get:
      operationId: datafile
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            application/xml:
              schema:
                type: object
  /api/v1/access/datafile/{fileId}/auxiliary:
    get:
      operationId: listDatafileMetadataAux
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{fileId}/auxiliary/{formatTag}/{formatVersion}:
    get:
      operationId: downloadAuxiliaryFile
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DownloadInstance'
    post:
      operationId: saveAuxiliaryFileWithVersion
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: number
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteAuxiliaryFileWithVersion
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: number
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{fileId}/auxiliary/{origin}:
    get:
      operationId: listDatafileMetadataAuxByOrigin
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: origin
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{fileId}/metadata:
    get:
      operationId: tabularDatafileMetadata
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          type: number
      - name: exclude
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            text/xml:
              schema:
                type: string
  /api/v1/access/datafile/{fileId}/metadata/ddi:
    get:
      operationId: tabularDatafileMetadataDDI
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          type: number
      - name: exclude
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            text/xml:
              schema:
                type: string
  /api/v1/access/datafile/{id}/grantAccess/{identifier}:
    put:
      operationId: grantFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{id}/listRequests:
    get:
      operationId: listFileAccessRequests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{id}/rejectAccess/{identifier}:
    put:
      operationId: rejectFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{id}/requestAccess:
    put:
      operationId: requestFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafile/{id}/revokeAccess/{identifier}:
    delete:
      operationId: revokeFileAccess
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/access/datafiles:
    post:
      operationId: postDownloadDatafiles
      parameters:
      - name: gbrecs
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            application/zip:
              schema:
                type: object
  /api/v1/access/datafiles/{fileIds}:
    get:
      operationId: datafiles
      parameters:
      - name: fileIds
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            application/zip:
              schema:
                type: object
  /api/v1/access/dataset/{id}:
    get:
      operationId: downloadAllFromLatest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            application/zip:
              schema:
                type: object
  /api/v1/access/dataset/{id}/versions/{versionId}:
    get:
      operationId: downloadAllFromVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/zip:
              schema:
                type: object
  /api/v1/access/dsCardImage/{versionId}:
    get:
      operationId: dsCardImage
      parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            image/png:
              schema:
                type: object
  /api/v1/access/dvCardImage/{dataverseId}:
    get:
      operationId: dvCardImage
      parameters:
      - name: dataverseId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            image/png:
              schema:
                type: object
  /api/v1/access/fileCardImage/{fileId}:
    get:
      operationId: fileCardImage
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            image/png:
              schema:
                type: object
  /api/v1/access/{id}/allowAccessRequest:
    put:
      operationId: allowAccessRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/archiveAllUnarchivedDatasetVersions:
    post:
      operationId: archiveAllUnarchivedDatasetVersions
      parameters:
      - name: listonly
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          type: integer
      - name: latestonly
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/assignee/{idtf}:
    get:
      operationId: findRoleAssignee
      parameters:
      - name: idtf
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  '/api/v1/admin/assignments/assignees/{raIdtf: .*}':
    get:
      operationId: getAssignmentsFor
      parameters:
      - name: raIdtf
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers:
    get:
      operationId: listAuthenticatedUsers
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createAuthenicatedUser
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/convert/builtin2oauth:
    put:
      operationId: builtin2oauth
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/convert/builtin2shib:
    put:
      operationId: builtin2shib
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/id/{id}:
    delete:
      operationId: deleteAuthenticatedUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/id/{id}/convertRemoteToBuiltIn:
    put:
      operationId: convertOAuthUserToBuiltin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/id/{id}/convertShibToBuiltIn:
    put:
      operationId: convertShibUserToBuiltin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/id/{id}/deactivate:
    post:
      operationId: deactivateAuthenticatedUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/{identifier}:
    get:
      operationId: getAuthenticatedUserByIdentifier
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteAuthenticatedUser
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticatedUsers/{identifier}/deactivate:
    post:
      operationId: deactivateAuthenticatedUser
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticationProviderFactories:
    get:
      operationId: listAuthProviderFactories
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticationProviders:
    get:
      operationId: listAuthProviders
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addProvider
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AuthenticationProviderRow'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticationProviders/{id}:
    get:
      operationId: showProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteAuthenticationProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticationProviders/{id}/:enabled:
    post:
      operationId: enableAuthenticationProvider_deprecated
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/authenticationProviders/{id}/enabled:
    get:
      operationId: checkAuthenticationProviderEnabled
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: enableAuthenticationProvider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/bannerMessage:
    get:
      operationId: getBannerMessages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addBannerMessage
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/bannerMessage/{id}:
    delete:
      operationId: deleteBannerMessage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/bannerMessage/{id}/deactivate:
    put:
      operationId: deactivateBannerMessage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/batch/jobs:
    get:
      operationId: listBatchJobs
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/batch/jobs/name/{jobName}:
    get:
      operationId: listBatchJobsByName
      parameters:
      - name: jobName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/batch/jobs/{jobId}:
    get:
      operationId: listBatchJobById
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/clearMetricsCache:
    delete:
      operationId: clearMetricsCache
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/clearMetricsCache/{name}:
    delete:
      operationId: clearMetricsCacheByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/computeDataFileHashValue/{fileId}/algorithm/{alg}:
    post:
      operationId: computeDataFileHashValue
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: alg
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/confirmEmail/{userId}:
    get:
      operationId: getConfirmEmailToken
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: startConfirmEmailProcess
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/convertUserFromBcryptToSha1:
    post:
      operationId: convertUserFromBcryptToSha1
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datafiles/integrity/fixmissingoriginalsizes:
    get:
      operationId: fixMissingOriginalSizes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datafiles/integrity/fixmissingoriginaltypes:
    get:
      operationId: fixMissingOriginalTypes
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasetfield:
    get:
      operationId: getAll
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasetfield/controlledVocabulary/subject:
    get:
      operationId: showControlledVocabularyForSubject
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasetfield/load:
    post:
      operationId: loadDatasetFields
      requestBody:
        content:
          text/tab-separated-values:
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasetfield/loadNAControlledVocabularyValue:
    get:
      operationId: loadNAControlledVocabularyValue
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasetfield/loadpropertyfiles:
    post:
      operationId: loadLanguagePropertyFile
      requestBody:
        content:
          application/zip:
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasetfield/{name}:
    get:
      operationId: getByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasets/integrity/{datasetVersionId}/fixmissingunf:
    post:
      operationId: fixUnf
      parameters:
      - name: datasetVersionId
        in: path
        required: true
        schema:
          type: string
      - name: forceRecalculate
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/datasets/thumbnailMetadata/{id}:
    get:
      operationId: getDatasetThumbnailMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/dataverse/curationLabelSets:
    get:
      operationId: listCurationLabelSets
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/dataverse/storageDrivers:
    get:
      operationId: listStorageDrivers
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/dataverse/{alias}/addRoleAssignmentsToChildren:
    get:
      operationId: addRoleAssignementsToChildren
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/dataverse/{alias}/curationLabelSet:
    get:
      operationId: getCurationLabelSet
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setCurationLabelSet
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: resetCurationLabelSet
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/dataverse/{alias}/storageDriver:
    get:
      operationId: getStorageDriver
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setStorageDriver
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: resetStorageDriver
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/externalTools:
    get:
      operationId: getExternalTools
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addExternalTool
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/externalTools/{id}:
    get:
      operationId: getExternalTool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteExternalTool
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/feedback:
    post:
      operationId: submitFeedback
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/domain:
    get:
      operationId: listMailDomainGroups
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createMailDomainGroup
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/domain/{groupAlias}:
    get:
      operationId: getMailDomainGroup
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: updateMailDomainGroups
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteMailDomainGroup
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/ip:
    get:
      operationId: listIpGroups
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: postIpGroup
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/ip/{groupIdtf}:
    get:
      operationId: getIpGroup
      parameters:
      - name: groupIdtf
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteIpGroup
      parameters:
      - name: groupIdtf
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/ip/{groupName}:
    put:
      operationId: putIpGroups
      parameters:
      - name: groupName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/shib:
    get:
      operationId: listShibGroups
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createShibGroup
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/groups/shib/{primaryKey}:
    delete:
      operationId: deleteShibGroup
      parameters:
      - name: primaryKey
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index:
    get:
      operationId: indexAllOrSubset
      parameters:
      - name: numPartitions
        in: query
        schema:
          type: number
      - name: partitionIdToProcess
        in: query
        schema:
          type: number
      - name: previewOnly
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/clear:
    get:
      operationId: clearSolrIndex
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/clear-orphans:
    get:
      operationId: clearOrphans
      parameters:
      - name: sync
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/continue:
    get:
      operationId: indexAllOrSubsetContinue
      parameters:
      - name: numPartitions
        in: query
        schema:
          type: number
      - name: partitionIdToProcess
        in: query
        schema:
          type: number
      - name: previewOnly
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/dataset:
    get:
      operationId: indexDatasetByPersistentId
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/filemetadata/{dataset_id}:
    get:
      operationId: getFileMetadataByDatasetId
      parameters:
      - name: dataset_id
        in: path
        required: true
        schema:
          type: number
      - name: maxResults
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: order
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/filesearch:
    get:
      operationId: filesearch
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      - name: semanticVersion
        in: query
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/mod:
    get:
      operationId: indexMod
      parameters:
      - name: partitions
        in: query
        schema:
          type: number
      - name: which
        in: query
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/perms:
    get:
      operationId: indexAllPermissions
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/perms/{id}:
    get:
      operationId: indexPermissions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/permsDebug:
    get:
      operationId: searchPermsDebug
      parameters:
      - name: key
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/solr/schema:
    get:
      operationId: getSolrSchema
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: string
  /api/v1/admin/index/status:
    get:
      operationId: indexStatus
      parameters:
      - name: sync
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/test:
    get:
      operationId: searchDebug
      parameters:
      - name: key
        in: query
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
      - name: fq
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/timestamps:
    delete:
      operationId: deleteAllTimestamps
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/timestamps/{dvObjectId}:
    delete:
      operationId: deleteTimestamp
      parameters:
      - name: dvObjectId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/index/{type}/{id}:
    get:
      operationId: indexTypeById
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/isOrcid:
    get:
      operationId: isOrcidEnabled
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/list-users:
    get:
      operationId: filterAuthenticatedUsers
      parameters:
      - name: searchTerm
        in: query
        schema:
          type: string
      - name: selectedPage
        in: query
        schema:
          type: integer
      - name: itemsPerPage
        in: query
        schema:
          type: integer
      - name: sortKey
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/makeDataCount/addUsageMetricsFromSushiReport:
    post:
      operationId: addUsageMetricsFromSushiReportAll
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: reportOnDisk
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/makeDataCount/sendToHub:
    post:
      operationId: sendDataToHub
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/makeDataCount/{id}/addUsageMetricsFromSushiReport:
    post:
      operationId: addUsageMetricsFromSushiReport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: reportOnDisk
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/makeDataCount/{id}/updateCitationsForDataset:
    post:
      operationId: updateCitationsForDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/metadata/clearExportTimestamps:
    get:
      operationId: clearExportTimestamps
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/metadata/exportAll:
    get:
      operationId: exportAll
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/metadata/exportOAI/{specname}:
    put:
      operationId: exportOaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/metadata/reExportAll:
    get:
      operationId: reExportAll
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/metadata/{id}/reExportDataset:
    get:
      operationId: indexDatasetByPersistentId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/permissions/{dvo}:
    get:
      operationId: findPermissonsOn
      parameters:
      - name: dvo
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/publishDataverseAsCreator/{id}:
    post:
      operationId: publishDataverseAsCreator
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/registerDataFileAll:
    get:
      operationId: registerDataFileAll
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/registerDataFiles/{alias}:
    get:
      operationId: registerDataFilesInCollection
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      - name: sleep
        in: query
        schema:
          type: integer
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/requestSignedUrl:
    post:
      operationId: getSignedUrl
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/roles:
    get:
      operationId: listBuiltinRoles
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createNewBuiltinRole
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/roles/{id}:
    delete:
      operationId: deleteRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/savedsearches:
    get:
      operationId: meta
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: add
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/savedsearches/list:
    get:
      operationId: list
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/savedsearches/makelinks/all:
    put:
      operationId: makeLinksForAllSavedSearches
      parameters:
      - name: debug
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/savedsearches/makelinks/{id}:
    put:
      operationId: makeLinksForSingleSavedSearch
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: debug
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/savedsearches/{id}:
    get:
      operationId: show
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/settings:
    get:
      operationId: listAllSettings
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/settings/{name}:
    get:
      operationId: getSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: putSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/settings/{name}/lang/{lang}:
    put:
      operationId: putSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: lang
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteSetting
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: lang
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/sitemap:
    post:
      operationId: updateSiteMap
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/storageSites:
    get:
      operationId: listAll
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addSite
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/storageSites/{id}:
    get:
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/storageSites/{id}/primaryStorage:
    put:
      operationId: setPrimary
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/submitDatasetVersionToArchive/{id}/{version}:
    post:
      operationId: submitDatasetVersionToArchive
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/superuser/{identifier}:
    post:
      operationId: toggleSuperuser
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/template/{id}:
    delete:
      operationId: deleteTemplate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/templates:
    get:
      operationId: findAllTemplates
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/templates/{alias}:
    get:
      operationId: findTemplates
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/test/datasets/{id}/externalTools:
    get:
      operationId: getExternalToolsforFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/test/files/{id}/externalTools:
    get:
      operationId: getExternalToolsForFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/updateHashValues/{alg}:
    get:
      operationId: updateHashValues
      parameters:
      - name: alg
        in: path
        required: true
        schema:
          type: string
      - name: num
        in: query
        schema:
          type: integer
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/validate/dataset/files/{id}:
    get:
      operationId: validateDatasetDatafiles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/validate/dataset/{id}:
    get:
      operationId: validateDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: variables
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/validate/datasets:
    get:
      operationId: validateAllDatasets
      parameters:
      - name: variables
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/admin/validateDataFileHashValue/{fileId}:
    post:
      operationId: validateDataFileHashValue
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/validatePassword:
    post:
      operationId: validatePassword
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/workflows:
    get:
      operationId: listWorkflows
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addWorkflow
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/workflows/default:
    get:
      operationId: listDefaults
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/workflows/default/{triggerType}:
    get:
      operationId: getDefault
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setDefault
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteDefault
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/workflows/ip-whitelist:
    get:
      operationId: getIpWhitelist
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setIpWhitelist
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteIpWhitelist
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/workflows/{identifier}:
    get:
      operationId: getWorkflow
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/workflows/{id}:
    delete:
      operationId: deleteWorkflow
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/{id}/registerDataFile:
    get:
      operationId: registerDataFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/admin/{id}/reregisterHDLToPID:
    post:
      operationId: reregisterHdlToPID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/batch/harvest:
    get:
      operationId: harvest
      parameters:
      - name: path
        in: query
        schema:
          type: string
      - name: dv
        in: query
        schema:
          type: string
      - name: createDV
        in: query
        schema:
          type: boolean
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/batch/import:
    get:
      operationId: getImport
      parameters:
      - name: path
        in: query
        schema:
          type: string
      - name: dv
        in: query
        schema:
          type: string
      - name: createDV
        in: query
        schema:
          type: boolean
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: postImport
      parameters:
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/batch/jobs/import/datasets/files/{identifier}:
    post:
      operationId: getFilesystemImport
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: mode
        in: query
        schema:
          type: string
          default: MERGE
      - name: uploadFolder
        in: query
        schema:
          type: string
      - name: totalSize
        in: query
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/builtin-users:
    post:
      operationId: save
      parameters:
      - name: password
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: sendEmailNotification
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BuiltinUser'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/builtin-users/{password}/{key}:
    post:
      operationId: create
      parameters:
      - name: password
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BuiltinUser'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/builtin-users/{password}/{key}/{sendEmailNotification}:
    post:
      operationId: create
      parameters:
      - name: password
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: sendEmailNotification
        in: path
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BuiltinUser'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/builtin-users/{username}/api-token:
    get:
      operationId: getApiToken
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/export:
    get:
      operationId: exportDataset
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      - name: exporter
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/xml:
              schema:
                type: object
            application/json:
              schema:
                type: object
            application/html:
              schema:
                type: object
            application/ld+json:
              schema:
                type: object
  /api/v1/datasets/listCurationStates:
    get:
      operationId: getCurationStates
      responses:
        default:
          description: Default Response.
          content:
            text/csv:
              schema:
                type: object
  /api/v1/datasets/locks:
    get:
      operationId: listLocks
      parameters:
      - name: type
        in: query
        schema:
          type: string
      - name: userIdentifier
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/modifyRegistrationAll:
    post:
      operationId: updateDatasetTargetURLAll
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/modifyRegistrationPIDMetadataAll:
    get:
      operationId: updateDatasetPIDMetadataAll
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/mpupload:
    put:
      operationId: completeMPUpload
      parameters:
      - name: globalid
        in: query
        schema:
          type: string
      - name: storageidentifier
        in: query
        schema:
          type: string
      - name: uploadid
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: abortMPUpload
      parameters:
      - name: globalid
        in: query
        schema:
          type: string
      - name: storageidentifier
        in: query
        schema:
          type: string
      - name: uploadid
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/privateUrlDatasetVersion/{privateUrlToken}:
    get:
      operationId: getPrivateUrlDatasetVersion
      parameters:
      - name: privateUrlToken
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/privateUrlDatasetVersion/{privateUrlToken}/citation:
    get:
      operationId: getPrivateUrlDatasetVersionCitation
      parameters:
      - name: privateUrlToken
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/summaryFieldNames:
    get:
      operationId: getDatasetSummaryFieldNames
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{datasetId}/deleteLink/{linkedDataverseId}:
    delete:
      operationId: deleteDatasetLinkingDataverse
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          type: string
      - name: linkedDataverseId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/allowedCurationLabels:
    get:
      operationId: getAllowedCurationLabels
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/assignments:
    get:
      operationId: getAssignments
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createAssignment
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleAssignmentDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/assignments/{id}:
    delete:
      operationId: deleteAssignment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/curationLabelSet:
    get:
      operationId: getCurationLabelSet
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setCurationLabelSet
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: resetCurationLabelSet
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/dataCaptureModule/checksumValidation:
    post:
      operationId: receiveChecksumValidationResults
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/dataCaptureModule/rsync:
    get:
      operationId: getRsync
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/lock/{type}:
    post:
      operationId: lockDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/locks:
    get:
      operationId: getLocksForDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteLocks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/storageDriver:
    get:
      operationId: getFileStore
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setFileStore
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: resetFileStore
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/storagesize:
    get:
      operationId: getStorageSize
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: includeCached
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{identifier}/timestamps:
    get:
      operationId: getTimestamps
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/datasets/{identifier}/versions/{versionId}/downloadsize:
    get:
      operationId: getDownloadSize
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}:
    get:
      operationId: getDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/:persistentId:
    get:
      operationId: getDatasetByPid
      parameters:
      - name: persistentId
        in: query
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/actions/:publish:
    get:
      operationId: publishDataseUsingGetDeprecated
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: publishDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: assureIsIndexed
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/actions/:releasemigrated:
    post:
      operationId: publishMigratedDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: updatepidatprovider
        in: query
        schema:
          type: boolean
          default: "false"
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/add:
    post:
      operationId: addFileToDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/addFiles:
    post:
      operationId: addFilesToDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/addglobusFiles:
    post:
      operationId: addGlobusFilesToDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/citationdate:
    put:
      operationId: setCitationDate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: useDefaultCitationDate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/cleanStorage:
    get:
      operationId: cleanStorage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dryrun
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/curationStatus:
    get:
      operationId: getCurationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: setCurationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: label
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteCurationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/deleteMetadata:
    put:
      operationId: deleteVersionMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/deleteglobusRule:
    post:
      operationId: deleteglobusRule
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/destroy:
    delete:
      operationId: destroyDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/dirindex:
    get:
      operationId: getFileAccessFolderView
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: folder
        in: query
        schema:
          type: string
      - name: original
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            text/html:
              schema:
                type: object
  /api/v1/datasets/{id}/editMetadata:
    put:
      operationId: editVersionMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: replace
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/files/actions/:set-embargo:
    post:
      operationId: createFileEmbargo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/files/actions/:unset-embargo:
    post:
      operationId: removeFileEmbargo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/links:
    get:
      operationId: getLinks
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/makeDataCount/citations:
    get:
      operationId: getMakeDataCountCitations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/makeDataCount/{metric}:
    get:
      operationId: getMakeDataCountMetricCurrentMonth
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/makeDataCount/{metric}/{yyyymm}:
    get:
      operationId: getMakeDataCountMetric
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/metadata:
    get:
      operationId: getVersionJsonLDMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
    put:
      operationId: updateVersionMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: replace
        in: query
        schema:
          type: boolean
          default: "false"
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/metadata/delete:
    put:
      operationId: deleteMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/modifyRegistration:
    get:
      operationId: updateDatasetTargetURL
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/modifyRegistrationMetadata:
    post:
      operationId: updateDatasetPIDMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/move/{targetDataverseAlias}:
    post:
      operationId: moveDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: targetDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: forceMove
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/privateUrl:
    get:
      operationId: getPrivateUrlData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createPrivateUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: anonymizedAccess
        in: query
        schema:
          type: boolean
          default: "false"
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deletePrivateUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/replaceFiles:
    post:
      operationId: replaceFilesInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/returnToAuthor:
    post:
      operationId: returnToAuthor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/submitForReview:
    post:
      operationId: submitForReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/thumbnail:
    get:
      operationId: getDatasetThumbnail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            image/png:
              schema:
                type: object
    post:
      operationId: uploadDatasetLogo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: removeDatasetLogo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/thumbnail/candidates:
    get:
      operationId: getDatasetThumbnailCandidates
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/thumbnail/{dataFileId}:
    post:
      operationId: setDataFileAsThumbnail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dataFileId
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/uploadsid:
    get:
      operationId: getUploadUrl
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/uploadurls:
    get:
      operationId: getMPUploadUrls
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions:
    get:
      operationId: listVersions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{versionId}:
    get:
      operationId: getVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: updateDraftVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteDraftVersion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{versionId}/citation:
    get:
      operationId: getDatasetVersionCitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{versionId}/customlicense:
    get:
      operationId: getCustomTermsTab
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{versionId}/files:
    get:
      operationId: getVersionFiles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{versionId}/linkset:
    get:
      operationId: getLinkset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{versionId}/metadata:
    get:
      operationId: getVersionJsonLDMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/datasets/{id}/versions/{versionNumber}/metadata/{block}:
    get:
      operationId: getVersionMetadataBlock
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        required: true
        schema:
          type: string
      - name: block
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/versions/{version}/toolparams/{tid}:
    get:
      operationId: getExternalToolDVParams
      parameters:
      - name: tid
        in: path
        required: true
        schema:
          type: number
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datasets/{id}/{version}/archivalStatus:
    get:
      operationId: getDatasetVersionArchivalStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: setDatasetVersionArchivalStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteDatasetVersionArchivalStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/datasets/{linkedDatasetId}/link/{linkingDataverseAlias}:
    put:
      operationId: linkDataset
      parameters:
      - name: linkedDatasetId
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/datatags/receiveTags/{uniqueCacheId}:
    post:
      operationId: receiveTags
      parameters:
      - name: uniqueCacheId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses:
    post:
      operationId: addRoot
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}:
    get:
      operationId: viewDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/actions/:publish:
    post:
      operationId: publishDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/assignments:
    get:
      operationId: listAssignments
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createAssignment
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleAssignmentDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/assignments/{id}:
    delete:
      operationId: deleteAssignment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/attribute/{attribute}:
    put:
      operationId: updateAttribute
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: attribute
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/contents:
    get:
      operationId: listContent
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/datasets:
    post:
      operationId: createDatasetFromJsonLd
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: doNotValidate
        in: query
        schema:
          type: string
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/datasets/:import:
    post:
      operationId: importDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: pid
        in: query
        schema:
          type: string
      - name: release
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/datasets/:importddi:
    post:
      operationId: importDatasetDdi
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: pid
        in: query
        schema:
          type: string
      - name: release
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/datasets/:startmigration:
    post:
      operationId: recreateDataset
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/defaultContributorRole/{roleAlias}:
    put:
      operationId: updateDefaultContributorRole
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/facets:
    get:
      operationId: listFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: setFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/dataverses/{identifier}/groups:
    get:
      operationId: listGroups
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createExplicitGroup
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExplicitGroupDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/groups/{aliasInOwner}:
    get:
      operationId: getGroupByOwnerAndAliasInOwner
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: updateGroup
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExplicitGroupDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteGroup
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees:
    post:
      operationId: addRoleAssingees
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  '/api/v1/dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees/{roleAssigneeIdentifier: .*}':
    put:
      operationId: addRoleAssingee
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: roleAssigneeIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteRoleAssingee
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: roleAssigneeIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/guestbookResponses:
    get:
      operationId: getGuestbookResponsesByDataverse
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: guestbookId
        in: query
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/links:
    get:
      operationId: listLinks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/metadatablockfacets:
    get:
      operationId: listMetadataBlockFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
    post:
      operationId: setMetadataBlockFacets
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/dataverses/{identifier}/metadatablockfacets/isRoot:
    post:
      operationId: updateMetadataBlockFacetsRoot
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/dataverses/{identifier}/metadatablocks:
    get:
      operationId: listMetadataBlocks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: setMetadataBlocks
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/dataverses/{identifier}/metadatablocks/:isRoot:
    get:
      operationId: getMetadataRoot_legacy
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: setMetadataRoot_legacy
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/dataverses/{identifier}/metadatablocks/isRoot:
    get:
      operationId: getMetadataRoot
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: setMetadataRoot
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/dataverses/{identifier}/roles:
    get:
      operationId: listRoles
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createRole
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{identifier}/storagesize:
    get:
      operationId: getStorageSize
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: includeCached
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{id}/move/{targetDataverseAlias}:
    post:
      operationId: moveDataverse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: targetDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: forceMove
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{linkedDataverseAlias}/link/{linkingDataverseAlias}:
    put:
      operationId: linkDataverse
      parameters:
      - name: linkedDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/dataverses/{linkingDataverseId}/deleteLink/{linkedDataverseId}:
    delete:
      operationId: deleteDataverseLinkingDataverse
      parameters:
      - name: linkingDataverseId
        in: path
        required: true
        schema:
          type: string
      - name: linkedDataverseId
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/edit/{fileId}:
    put:
      operationId: edit
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/xml:
            schema:
              type: object
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/fixityAlgorithm:
    get:
      operationId: getFixityAlgorithm
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}:
    get:
      operationId: getFileData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteFileInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/draft:
    get:
      operationId: getFileDataDraft
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/extractNcml:
    post:
      operationId: extractNcml
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/metadata:
    get:
      operationId: getFileMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: updateFileMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/metadata/draft:
    get:
      operationId: getFileMetadataDraft
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/metadata/{fmid}/toolparams/{tid}:
    get:
      operationId: getExternalToolFMParams
      parameters:
      - name: tid
        in: path
        required: true
        schema:
          type: number
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: fmid
        in: path
        required: true
        schema:
          type: number
      - name: locale
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/prov-freeform:
    get:
      operationId: getProvFreeForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addProvFreeForm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/prov-json:
    get:
      operationId: getProvJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addProvJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteProvJson
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/redetect:
    post:
      operationId: redetectDatafile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dryRun
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/reingest:
    post:
      operationId: reingest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/replace:
    post:
      operationId: replaceFileInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/restrict:
    put:
      operationId: restrictFileInDataset
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/files/{id}/uningest:
    post:
      operationId: uningestDatafile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/clients:
    get:
      operationId: harvestingClients
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/clients/{nickName}:
    get:
      operationId: harvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: modifyHarvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: createHarvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteHarvestingClient
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/clients/{nickName}/run:
    post:
      operationId: startHarvestingJob
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/server/oaisets:
    get:
      operationId: oaiSets
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/server/oaisets/add:
    post:
      operationId: createOaiSet
      parameters:
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/server/oaisets/{specname}:
    get:
      operationId: oaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    put:
      operationId: modifyOaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteOaiSet
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/harvest/server/oaisets/{specname}/datasets:
    get:
      operationId: oaiSetListDatasets
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/inbox:
    post:
      operationId: acceptMessage
      requestBody: {}
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/apiTermsOfUse:
    get:
      operationId: getTermsOfUse
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/datasets:
    get:
      operationId: getDatasetsAllTime
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/datasets/bySubject:
    get:
      operationId: getDatasetsBySubject
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/datasets/bySubject/toMonth/{yyyymm}:
    get:
      operationId: getDatasetsBySubjectToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/datasets/monthly:
    get:
      operationId: getDatasetsTimeSeriest
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/datasets/pastDays/{days}:
    get:
      operationId: getDatasetsPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          type: integer
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/datasets/toMonth/{yyyymm}:
    get:
      operationId: getDatasetsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/dataverses:
    get:
      operationId: getDataversesAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/dataverses/byCategory:
    get:
      operationId: getDataversesByCategory
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/dataverses/bySubject:
    get:
      operationId: getDataversesBySubject
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/dataverses/monthly:
    get:
      operationId: getDataversesTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/dataverses/pastDays/{days}:
    get:
      operationId: getDataversesPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/dataverses/toMonth/{yyyymm}:
    get:
      operationId: getDataversesToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/downloads:
    get:
      operationId: getDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/downloads/monthly:
    get:
      operationId: getDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/downloads/pastDays/{days}:
    get:
      operationId: getDownloadsPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/downloads/toMonth/{yyyymm}:
    get:
      operationId: getDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/filedownloads:
    get:
      operationId: getFileDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/filedownloads/monthly:
    get:
      operationId: getFileDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/filedownloads/toMonth/{yyyymm}:
    get:
      operationId: getFileDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/files:
    get:
      operationId: getFilesAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/files/byType:
    get:
      operationId: getFilesByType
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/files/byType/monthly:
    get:
      operationId: getFilesByTypeTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/files/monthly:
    get:
      operationId: getFilesTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/files/pastDays/{days}:
    get:
      operationId: getFilesPastDays
      parameters:
      - name: days
        in: path
        required: true
        schema:
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/files/toMonth/{yyyymm}:
    get:
      operationId: getFilesToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/makeDataCount/{metric}:
    get:
      operationId: getMakeDataCountMetricCurrentMonth
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/makeDataCount/{metric}/monthly:
    get:
      operationId: getMakeDataCountMetricTimeSeries
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/makeDataCount/{metric}/toMonth/{yyyymm}:
    get:
      operationId: getMakeDataCountMetricToMonth
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/tree:
    get:
      operationId: getDataversesTree
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/tree/toMonth/{yyyymm}:
    get:
      operationId: getDataversesTreeToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/metrics/uniquedownloads:
    get:
      operationId: getUniqueDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/uniquedownloads/monthly:
    get:
      operationId: getUniqueDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/uniquedownloads/toMonth/{yyyymm}:
    get:
      operationId: getUniqueDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/uniquefiledownloads:
    get:
      operationId: getUniqueFileDownloadsAllTime
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/uniquefiledownloads/monthly:
    get:
      operationId: getUniqueFileDownloadsTimeSeries
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/metrics/uniquefiledownloads/toMonth/{yyyymm}:
    get:
      operationId: getUniqueFileDownloadsToMonth
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/info/server:
    get:
      operationId: getServer
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/settings/:DatasetPublishPopupCustomText:
    get:
      operationId: getDatasetPublishPopupCustomText
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/settings/incompleteMetadataViaApi:
    get:
      operationId: getAllowsIncompleteMetadata
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/info/version:
    get:
      operationId: getInfo
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/ingest/test/file:
    get:
      operationId: datafile
      parameters:
      - name: fileName
        in: query
        schema:
          type: string
      - name: fileType
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            text/plain:
              schema:
                type: string
  /api/v1/licenses:
    get:
      operationId: getLicenses
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    post:
      operationId: addLicense
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/License'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/licenses/default:
    get:
      operationId: getDefault
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/licenses/default/{id}:
    put:
      operationId: setDefault
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/licenses/{id}:
    get:
      operationId: getLicenseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteLicenseById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/licenses/{id}/:active/{activeState}:
    put:
      operationId: setActiveState
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: activeState
        in: path
        required: true
        schema:
          type: boolean
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/licenses/{id}/:sortOrder/{sortOrder}:
    put:
      operationId: setSortOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      - name: sortOrder
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/logout:
    post:
      operationId: logout
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/mail/notifications:
    get:
      operationId: sendMail
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/meta/datafile/{fileId}:
    get:
      operationId: datafile
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: number
      - name: fileMetadataId
        in: query
        schema:
          type: number
      - name: exclude
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            text/xml:
              schema:
                type: string
  /api/v1/meta/dataset/{datasetId}:
    get:
      operationId: dataset
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          type: number
      - name: exclude
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/xml:
              schema:
                type: string
  /api/v1/metadatablocks:
    get:
      operationId: list
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/metadatablocks/{identifier}:
    get:
      operationId: getBlock
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/mydata/retrieve:
    get:
      operationId: retrieveMyDataAsJsonString
      parameters:
      - name: dvobject_types
        in: query
        schema:
          type: array
          items:
            type: object
      - name: published_states
        in: query
        schema:
          type: array
          items:
            type: string
      - name: selected_page
        in: query
        schema:
          type: integer
      - name: mydata_search_term
        in: query
        schema:
          type: string
      - name: role_ids
        in: query
        schema:
          type: array
          items:
            type: number
      - name: userIdentifier
        in: query
        schema:
          type: string
      - name: filter_validities
        in: query
        schema:
          type: boolean
      - name: dataset_valid
        in: query
        schema:
          type: array
          items:
            type: boolean
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: string
  /api/v1/notifications/all:
    get:
      operationId: getAllNotificationsForUser
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/notifications/mutedEmails:
    get:
      operationId: getMutedEmailsForUser
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/notifications/mutedEmails/{typeName}:
    put:
      operationId: muteEmailsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: unmuteEmailsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/notifications/mutedNotifications:
    get:
      operationId: getMutedNotificationsForUser
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/notifications/mutedNotifications/{typeName}:
    put:
      operationId: muteNotificationsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: unmuteNotificationsForUser
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/notifications/{id}:
    delete:
      operationId: deleteNotificationForUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: number
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/pids:
    get:
      operationId: getPid
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/pids/unreserved:
    get:
      operationId: getUnreserved
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/pids/{id}/delete:
    delete:
      operationId: deletePid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/pids/{id}/reserve:
    post:
      operationId: reservePid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            application/json:
              schema:
                type: object
  /api/v1/roles:
    post:
      operationId: createNewRole
      parameters:
      - name: dvo
        in: query
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RoleDTO'
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/roles/{id}:
    get:
      operationId: viewRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteRole
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/search:
    get:
      operationId: search
      parameters:
      - name: q
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: array
          items:
            type: string
      - name: subtree
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: order
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: integer
      - name: start
        in: query
        schema:
          type: integer
      - name: show_relevance
        in: query
        schema:
          type: boolean
      - name: show_facets
        in: query
        schema:
          type: boolean
      - name: fq
        in: query
        schema:
          type: array
          items:
            type: string
      - name: show_entity_ids
        in: query
        schema:
          type: boolean
      - name: show_api_urls
        in: query
        schema:
          type: boolean
      - name: show_my_data
        in: query
        schema:
          type: boolean
      - name: query_entities
        in: query
        schema:
          type: boolean
      - name: metadata_fields
        in: query
        schema:
          type: array
          items:
            type: string
      - name: geo_point
        in: query
        schema:
          type: string
      - name: geo_radius
        in: query
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/:me:
    get:
      operationId: getAuthenticatedUserByToken
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/token:
    get:
      operationId: getTokenExpirationDate
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
    delete:
      operationId: deleteToken
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/token/recreate:
    post:
      operationId: recreateToken
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/{consumedIdentifier}/mergeIntoUser/{baseIdentifier}:
    post:
      operationId: mergeInAuthenticatedUser
      parameters:
      - name: consumedIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: baseIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/{identifier}/changeIdentifier/{newIdentifier}:
    post:
      operationId: changeAuthenticatedUserIdentifier
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: newIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/{identifier}/removeRoles:
    post:
      operationId: removeUserRoles
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/{identifier}/traces:
    get:
      operationId: getTraces
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/{identifier}/traces/{element}:
    get:
      operationId: getTraces
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: element
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: Default Response.
  /api/v1/workflows/{invocationId}:
    post:
      operationId: resumeWorkflow
      parameters:
      - name: invocationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: Default Response.
          content:
            '*/*':
              schema:
                type: object
endpoints:
  /:
  - "/api/v1/access/datafile/bundle/{fileId}"
  - "/api/v1/access/datafile/{fileId:.+}"
  - "/api/v1/access/datafile/{fileId}/auxiliary"
  - "/api/v1/access/datafile/{fileId}/auxiliary/{formatTag}/{formatVersion}"
  - "/api/v1/access/datafile/{fileId}/auxiliary/{origin}"
  - "/api/v1/access/datafile/{fileId}/metadata"
  - "/api/v1/access/datafile/{fileId}/metadata/ddi"
  - "/api/v1/access/datafile/{id}/grantAccess/{identifier}"
  - "/api/v1/access/datafile/{id}/listRequests"
  - "/api/v1/access/datafile/{id}/rejectAccess/{identifier}"
  - "/api/v1/access/datafile/{id}/requestAccess"
  - "/api/v1/access/datafile/{id}/revokeAccess/{identifier}"
  - /api/v1/access/datafiles
  - "/api/v1/access/datafiles/{fileIds}"
  - "/api/v1/access/dataset/{id}"
  - "/api/v1/access/dataset/{id}/versions/{versionId}"
  - "/api/v1/access/dsCardImage/{versionId}"
  - "/api/v1/access/dvCardImage/{dataverseId}"
  - "/api/v1/access/fileCardImage/{fileId}"
  - "/api/v1/access/{id}/allowAccessRequest"
  - /api/v1/admin/archiveAllUnarchivedDatasetVersions
  - "/api/v1/admin/assignee/{idtf}"
  - "/api/v1/admin/assignments/assignees/{raIdtf: .*}"
  - /api/v1/admin/authenticatedUsers
  - /api/v1/admin/authenticatedUsers/convert/builtin2oauth
  - /api/v1/admin/authenticatedUsers/convert/builtin2shib
  - "/api/v1/admin/authenticatedUsers/id/{id}"
  - "/api/v1/admin/authenticatedUsers/id/{id}/convertRemoteToBuiltIn"
  - "/api/v1/admin/authenticatedUsers/id/{id}/convertShibToBuiltIn"
  - "/api/v1/admin/authenticatedUsers/id/{id}/deactivate"
  - "/api/v1/admin/authenticatedUsers/{identifier}"
  - "/api/v1/admin/authenticatedUsers/{identifier}/deactivate"
  - /api/v1/admin/authenticationProviderFactories
  - /api/v1/admin/authenticationProviders
  - "/api/v1/admin/authenticationProviders/{id}"
  - "/api/v1/admin/authenticationProviders/{id}/:enabled"
  - "/api/v1/admin/authenticationProviders/{id}/enabled"
  - /api/v1/admin/bannerMessage
  - "/api/v1/admin/bannerMessage/{id}"
  - "/api/v1/admin/bannerMessage/{id}/deactivate"
  - /api/v1/admin/batch/jobs
  - "/api/v1/admin/batch/jobs/name/{jobName}"
  - "/api/v1/admin/batch/jobs/{jobId}"
  - /api/v1/admin/clearMetricsCache
  - "/api/v1/admin/clearMetricsCache/{name}"
  - "/api/v1/admin/computeDataFileHashValue/{fileId}/algorithm/{alg}"
  - "/api/v1/admin/confirmEmail/{userId}"
  - /api/v1/admin/convertUserFromBcryptToSha1
  - /api/v1/admin/datafiles/integrity/fixmissingoriginalsizes
  - /api/v1/admin/datafiles/integrity/fixmissingoriginaltypes
  - /api/v1/admin/datasetfield
  - /api/v1/admin/datasetfield/controlledVocabulary/subject
  - /api/v1/admin/datasetfield/load
  - /api/v1/admin/datasetfield/loadNAControlledVocabularyValue
  - /api/v1/admin/datasetfield/loadpropertyfiles
  - "/api/v1/admin/datasetfield/{name}"
  - "/api/v1/admin/datasets/integrity/{datasetVersionId}/fixmissingunf"
  - "/api/v1/admin/datasets/thumbnailMetadata/{id}"
  - /api/v1/admin/dataverse/curationLabelSets
  - /api/v1/admin/dataverse/storageDrivers
  - "/api/v1/admin/dataverse/{alias}/addRoleAssignmentsToChildren"
  - "/api/v1/admin/dataverse/{alias}/curationLabelSet"
  - "/api/v1/admin/dataverse/{alias}/storageDriver"
  - /api/v1/admin/externalTools
  - "/api/v1/admin/externalTools/{id}"
  - /api/v1/admin/feedback
  - /api/v1/admin/groups/domain
  - "/api/v1/admin/groups/domain/{groupAlias}"
  - /api/v1/admin/groups/ip
  - "/api/v1/admin/groups/ip/{groupIdtf}"
  - "/api/v1/admin/groups/ip/{groupName}"
  - /api/v1/admin/groups/shib
  - "/api/v1/admin/groups/shib/{primaryKey}"
  - /api/v1/admin/index
  - /api/v1/admin/index/clear
  - /api/v1/admin/index/clear-orphans
  - /api/v1/admin/index/continue
  - /api/v1/admin/index/dataset
  - "/api/v1/admin/index/filemetadata/{dataset_id}"
  - /api/v1/admin/index/filesearch
  - /api/v1/admin/index/mod
  - /api/v1/admin/index/perms
  - "/api/v1/admin/index/perms/{id}"
  - /api/v1/admin/index/permsDebug
  - /api/v1/admin/index/solr/schema
  - /api/v1/admin/index/status
  - /api/v1/admin/index/test
  - /api/v1/admin/index/timestamps
  - "/api/v1/admin/index/timestamps/{dvObjectId}"
  - "/api/v1/admin/index/{type}/{id}"
  - /api/v1/admin/isOrcid
  - /api/v1/admin/list-users
  - /api/v1/admin/makeDataCount/addUsageMetricsFromSushiReport
  - /api/v1/admin/makeDataCount/sendToHub
  - "/api/v1/admin/makeDataCount/{id}/addUsageMetricsFromSushiReport"
  - "/api/v1/admin/makeDataCount/{id}/updateCitationsForDataset"
  - /api/v1/admin/metadata/clearExportTimestamps
  - /api/v1/admin/metadata/exportAll
  - "/api/v1/admin/metadata/exportOAI/{specname}"
  - /api/v1/admin/metadata/reExportAll
  - "/api/v1/admin/metadata/{id}/reExportDataset"
  - "/api/v1/admin/permissions/{dvo}"
  - "/api/v1/admin/publishDataverseAsCreator/{id}"
  - /api/v1/admin/registerDataFileAll
  - "/api/v1/admin/registerDataFiles/{alias}"
  - /api/v1/admin/requestSignedUrl
  - /api/v1/admin/roles
  - "/api/v1/admin/roles/{id}"
  - /api/v1/admin/savedsearches
  - /api/v1/admin/savedsearches/list
  - /api/v1/admin/savedsearches/makelinks/all
  - "/api/v1/admin/savedsearches/makelinks/{id}"
  - "/api/v1/admin/savedsearches/{id}"
  - /api/v1/admin/settings
  - "/api/v1/admin/settings/{name}"
  - "/api/v1/admin/settings/{name}/lang/{lang}"
  - /api/v1/admin/sitemap
  - /api/v1/admin/storageSites
  - "/api/v1/admin/storageSites/{id}"
  - "/api/v1/admin/storageSites/{id}/primaryStorage"
  - "/api/v1/admin/submitDatasetVersionToArchive/{id}/{version}"
  - "/api/v1/admin/superuser/{identifier}"
  - "/api/v1/admin/template/{id}"
  - /api/v1/admin/templates
  - "/api/v1/admin/templates/{alias}"
  - "/api/v1/admin/test/datasets/{id}/externalTools"
  - "/api/v1/admin/test/files/{id}/externalTools"
  - "/api/v1/admin/updateHashValues/{alg}"
  - "/api/v1/admin/validate/dataset/files/{id}"
  - "/api/v1/admin/validate/dataset/{id}"
  - /api/v1/admin/validate/datasets
  - "/api/v1/admin/validateDataFileHashValue/{fileId}"
  - /api/v1/admin/validatePassword
  - /api/v1/admin/workflows
  - /api/v1/admin/workflows/default
  - "/api/v1/admin/workflows/default/{triggerType}"
  - /api/v1/admin/workflows/ip-whitelist
  - "/api/v1/admin/workflows/{identifier}"
  - "/api/v1/admin/workflows/{id}"
  - "/api/v1/admin/{id}/registerDataFile"
  - "/api/v1/admin/{id}/reregisterHDLToPID"
  - /api/v1/batch/harvest
  - /api/v1/batch/import
  - "/api/v1/batch/jobs/import/datasets/files/{identifier}"
  - /api/v1/builtin-users
  - "/api/v1/builtin-users/{password}/{key}"
  - "/api/v1/builtin-users/{password}/{key}/{sendEmailNotification}"
  - "/api/v1/builtin-users/{username}/api-token"
  - /api/v1/datasets/export
  - /api/v1/datasets/listCurationStates
  - /api/v1/datasets/locks
  - /api/v1/datasets/modifyRegistrationAll
  - /api/v1/datasets/modifyRegistrationPIDMetadataAll
  - /api/v1/datasets/mpupload
  - "/api/v1/datasets/privateUrlDatasetVersion/{privateUrlToken}"
  - "/api/v1/datasets/privateUrlDatasetVersion/{privateUrlToken}/citation"
  - /api/v1/datasets/summaryFieldNames
  - "/api/v1/datasets/{datasetId}/deleteLink/{linkedDataverseId}"
  - "/api/v1/datasets/{identifier}/allowedCurationLabels"
  - "/api/v1/datasets/{identifier}/assignments"
  - "/api/v1/datasets/{identifier}/assignments/{id}"
  - "/api/v1/datasets/{identifier}/curationLabelSet"
  - "/api/v1/datasets/{identifier}/dataCaptureModule/checksumValidation"
  - "/api/v1/datasets/{identifier}/dataCaptureModule/rsync"
  - "/api/v1/datasets/{identifier}/lock/{type}"
  - "/api/v1/datasets/{identifier}/locks"
  - "/api/v1/datasets/{identifier}/storageDriver"
  - "/api/v1/datasets/{identifier}/storagesize"
  - "/api/v1/datasets/{identifier}/timestamps"
  - "/api/v1/datasets/{identifier}/versions/{versionId}/downloadsize"
  - "/api/v1/datasets/{id}"
  - "/api/v1/datasets/{id}/actions/:publish"
  - "/api/v1/datasets/{id}/actions/:releasemigrated"
  - "/api/v1/datasets/{id}/add"
  - "/api/v1/datasets/{id}/addFiles"
  - "/api/v1/datasets/{id}/addglobusFiles"
  - "/api/v1/datasets/{id}/citationdate"
  - "/api/v1/datasets/{id}/cleanStorage"
  - "/api/v1/datasets/{id}/curationStatus"
  - "/api/v1/datasets/{id}/deleteMetadata"
  - "/api/v1/datasets/{id}/deleteglobusRule"
  - "/api/v1/datasets/{id}/destroy"
  - "/api/v1/datasets/{id}/dirindex"
  - "/api/v1/datasets/{id}/editMetadata"
  - "/api/v1/datasets/{id}/files/actions/:set-embargo"
  - "/api/v1/datasets/{id}/files/actions/:unset-embargo"
  - "/api/v1/datasets/{id}/links"
  - "/api/v1/datasets/{id}/makeDataCount/citations"
  - "/api/v1/datasets/{id}/makeDataCount/{metric}"
  - "/api/v1/datasets/{id}/makeDataCount/{metric}/{yyyymm}"
  - "/api/v1/datasets/{id}/metadata"
  - "/api/v1/datasets/{id}/metadata/delete"
  - "/api/v1/datasets/{id}/modifyRegistration"
  - "/api/v1/datasets/{id}/modifyRegistrationMetadata"
  - "/api/v1/datasets/{id}/move/{targetDataverseAlias}"
  - "/api/v1/datasets/{id}/privateUrl"
  - "/api/v1/datasets/{id}/replaceFiles"
  - "/api/v1/datasets/{id}/returnToAuthor"
  - "/api/v1/datasets/{id}/submitForReview"
  - "/api/v1/datasets/{id}/thumbnail"
  - "/api/v1/datasets/{id}/thumbnail/candidates"
  - "/api/v1/datasets/{id}/thumbnail/{dataFileId}"
  - "/api/v1/datasets/{id}/uploadsid"
  - "/api/v1/datasets/{id}/uploadurls"
  - "/api/v1/datasets/{id}/versions"
  - "/api/v1/datasets/{id}/versions/{versionId}"
  - "/api/v1/datasets/{id}/versions/{versionId}/citation"
  - "/api/v1/datasets/{id}/versions/{versionId}/customlicense"
  - "/api/v1/datasets/{id}/versions/{versionId}/files"
  - "/api/v1/datasets/{id}/versions/{versionId}/linkset"
  - "/api/v1/datasets/{id}/versions/{versionId}/metadata"
  - "/api/v1/datasets/{id}/versions/{versionNumber}/metadata/{block}"
  - "/api/v1/datasets/{id}/versions/{version}/toolparams/{tid}"
  - "/api/v1/datasets/{id}/{version}/archivalStatus"
  - "/api/v1/datasets/{linkedDatasetId}/link/{linkingDataverseAlias}"
  - "/api/v1/datatags/receiveTags/{uniqueCacheId}"
  - /api/v1/dataverses
  - "/api/v1/dataverses/{identifier}"
  - "/api/v1/dataverses/{identifier}/actions/:publish"
  - "/api/v1/dataverses/{identifier}/assignments"
  - "/api/v1/dataverses/{identifier}/assignments/{id}"
  - "/api/v1/dataverses/{identifier}/attribute/{attribute}"
  - "/api/v1/dataverses/{identifier}/contents"
  - "/api/v1/dataverses/{identifier}/datasets"
  - "/api/v1/dataverses/{identifier}/datasets/:import"
  - "/api/v1/dataverses/{identifier}/datasets/:importddi"
  - "/api/v1/dataverses/{identifier}/datasets/:startmigration"
  - "/api/v1/dataverses/{identifier}/defaultContributorRole/{roleAlias}"
  - "/api/v1/dataverses/{identifier}/facets"
  - "/api/v1/dataverses/{identifier}/groups"
  - "/api/v1/dataverses/{identifier}/groups/{aliasInOwner}"
  - "/api/v1/dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees"
  - "/api/v1/dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees/{roleAssigneeIdentifier:\
    \ .*}"
  - "/api/v1/dataverses/{identifier}/guestbookResponses"
  - "/api/v1/dataverses/{identifier}/links"
  - "/api/v1/dataverses/{identifier}/metadatablockfacets"
  - "/api/v1/dataverses/{identifier}/metadatablockfacets/isRoot"
  - "/api/v1/dataverses/{identifier}/metadatablocks"
  - "/api/v1/dataverses/{identifier}/metadatablocks/:isRoot"
  - "/api/v1/dataverses/{identifier}/metadatablocks/isRoot"
  - "/api/v1/dataverses/{identifier}/roles"
  - "/api/v1/dataverses/{identifier}/storagesize"
  - "/api/v1/dataverses/{id}/move/{targetDataverseAlias}"
  - "/api/v1/dataverses/{linkedDataverseAlias}/link/{linkingDataverseAlias}"
  - "/api/v1/dataverses/{linkingDataverseId}/deleteLink/{linkedDataverseId}"
  - "/api/v1/edit/{fileId}"
  - /api/v1/files/fixityAlgorithm
  - "/api/v1/files/{id}"
  - "/api/v1/files/{id}/draft"
  - "/api/v1/files/{id}/extractNcml"
  - "/api/v1/files/{id}/metadata"
  - "/api/v1/files/{id}/metadata/draft"
  - "/api/v1/files/{id}/metadata/{fmid}/toolparams/{tid}"
  - "/api/v1/files/{id}/prov-freeform"
  - "/api/v1/files/{id}/prov-json"
  - "/api/v1/files/{id}/redetect"
  - "/api/v1/files/{id}/reingest"
  - "/api/v1/files/{id}/replace"
  - "/api/v1/files/{id}/restrict"
  - "/api/v1/files/{id}/uningest"
  - /api/v1/harvest/clients
  - "/api/v1/harvest/clients/{nickName}"
  - "/api/v1/harvest/clients/{nickName}/run"
  - /api/v1/harvest/server/oaisets
  - /api/v1/harvest/server/oaisets/add
  - "/api/v1/harvest/server/oaisets/{specname}"
  - "/api/v1/harvest/server/oaisets/{specname}/datasets"
  - /api/v1/inbox
  - /api/v1/info/apiTermsOfUse
  - /api/v1/info/metrics/datasets
  - /api/v1/info/metrics/datasets/bySubject
  - "/api/v1/info/metrics/datasets/bySubject/toMonth/{yyyymm}"
  - /api/v1/info/metrics/datasets/monthly
  - "/api/v1/info/metrics/datasets/pastDays/{days}"
  - "/api/v1/info/metrics/datasets/toMonth/{yyyymm}"
  - /api/v1/info/metrics/dataverses
  - /api/v1/info/metrics/dataverses/byCategory
  - /api/v1/info/metrics/dataverses/bySubject
  - /api/v1/info/metrics/dataverses/monthly
  - "/api/v1/info/metrics/dataverses/pastDays/{days}"
  - "/api/v1/info/metrics/dataverses/toMonth/{yyyymm}"
  - /api/v1/info/metrics/downloads
  - /api/v1/info/metrics/downloads/monthly
  - "/api/v1/info/metrics/downloads/pastDays/{days}"
  - "/api/v1/info/metrics/downloads/toMonth/{yyyymm}"
  - /api/v1/info/metrics/filedownloads
  - /api/v1/info/metrics/filedownloads/monthly
  - "/api/v1/info/metrics/filedownloads/toMonth/{yyyymm}"
  - /api/v1/info/metrics/files
  - /api/v1/info/metrics/files/byType
  - /api/v1/info/metrics/files/byType/monthly
  - /api/v1/info/metrics/files/monthly
  - "/api/v1/info/metrics/files/pastDays/{days}"
  - "/api/v1/info/metrics/files/toMonth/{yyyymm}"
  - "/api/v1/info/metrics/makeDataCount/{metric}"
  - "/api/v1/info/metrics/makeDataCount/{metric}/monthly"
  - "/api/v1/info/metrics/makeDataCount/{metric}/toMonth/{yyyymm}"
  - /api/v1/info/metrics/tree
  - "/api/v1/info/metrics/tree/toMonth/{yyyymm}"
  - /api/v1/info/metrics/uniquedownloads
  - /api/v1/info/metrics/uniquedownloads/monthly
  - "/api/v1/info/metrics/uniquedownloads/toMonth/{yyyymm}"
  - /api/v1/info/metrics/uniquefiledownloads
  - /api/v1/info/metrics/uniquefiledownloads/monthly
  - "/api/v1/info/metrics/uniquefiledownloads/toMonth/{yyyymm}"
  - /api/v1/info/server
  - /api/v1/info/settings/:DatasetPublishPopupCustomText
  - /api/v1/info/settings/incompleteMetadataViaApi
  - /api/v1/info/version
  - /api/v1/ingest/test/file
  - /api/v1/licenses
  - /api/v1/licenses/default
  - "/api/v1/licenses/default/{id}"
  - "/api/v1/licenses/{id}"
  - "/api/v1/licenses/{id}/:active/{activeState}"
  - "/api/v1/licenses/{id}/:sortOrder/{sortOrder}"
  - /api/v1/logout
  - /api/v1/mail/notifications
  - "/api/v1/meta/datafile/{fileId}"
  - "/api/v1/meta/dataset/{datasetId}"
  - /api/v1/metadatablocks
  - "/api/v1/metadatablocks/{identifier}"
  - /api/v1/mydata/retrieve
  - /api/v1/notifications/all
  - /api/v1/notifications/mutedEmails
  - "/api/v1/notifications/mutedEmails/{typeName}"
  - /api/v1/notifications/mutedNotifications
  - "/api/v1/notifications/mutedNotifications/{typeName}"
  - "/api/v1/notifications/{id}"
  - /api/v1/pids
  - /api/v1/pids/unreserved
  - "/api/v1/pids/{id}/delete"
  - "/api/v1/pids/{id}/reserve"
  - /api/v1/roles
  - "/api/v1/roles/{id}"
  - /api/v1/search
  - /api/v1/users/:me
  - /api/v1/users/token
  - /api/v1/users/token/recreate
  - "/api/v1/users/{consumedIdentifier}/mergeIntoUser/{baseIdentifier}"
  - "/api/v1/users/{identifier}/changeIdentifier/{newIdentifier}"
  - "/api/v1/users/{identifier}/removeRoles"
  - "/api/v1/users/{identifier}/traces"
  - "/api/v1/users/{identifier}/traces/{element}"
  - "/api/v1/workflows/{invocationId}"
components:
  schemas:
    AbstractGlobalIdServiceBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
    ActionLogServiceBean:
      type: object
      properties:
        em: {}
    Alignment:
      enum:
      - LEFT
      - CENTER
      - RIGHT
    AlternativePersistentIdentifier:
      type: object
      properties:
        id:
          type: number
        dvObject:
          $ref: '#/components/schemas/DvObject'
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime: {}
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        storageLocationDesignator:
          type: boolean
    AuthenticatedUser:
      type: object
      properties:
        id:
          type: number
        userIdentifier:
          type: string
        email:
          type: string
        affiliation:
          type: string
        position:
          type: string
        lastName:
          type: string
        firstName:
          type: string
        emailConfirmed: {}
        createdTime: {}
        lastLoginTime: {}
        lastApiUseTime: {}
        cart:
          $ref: '#/components/schemas/Cart'
        superuser:
          type: boolean
        deactivated:
          type: boolean
        deactivatedTime: {}
        mutedEmails:
          type: string
        mutedNotifications:
          type: string
        mutedEmailsSet:
          items:
            $ref: '#/components/schemas/Type'
        mutedNotificationsSet:
          items:
            $ref: '#/components/schemas/Type'
        shibIdentityProvider:
          type: string
        notifications:
          items:
            $ref: '#/components/schemas/UserNotification'
        requests:
          items:
            $ref: '#/components/schemas/UserNotification'
        datasetLocks:
          items:
            $ref: '#/components/schemas/DatasetLock'
        oAuth2TokenDatas:
          items:
            $ref: '#/components/schemas/OAuth2TokenData'
        roles:
          type: string
        authProviderId:
          type: string
        authProviderFactoryAlias:
          type: string
        authenticatedUserLookup:
          $ref: '#/components/schemas/AuthenticatedUserLookup'
    AuthenticatedUserLookup:
      type: object
      properties:
        id:
          type: number
        authenticationProviderId:
          type: string
        persistentUserId:
          type: string
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
    AuthenticationProviderRow:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        subtitle:
          type: string
        factoryAlias:
          type: string
        enabled:
          type: boolean
        factoryData:
          type: string
    AuthenticationProvidersRegistrationServiceBean:
      type: object
      properties:
        builtinUserServiceBean:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        passwordValidatorService:
          $ref: '#/components/schemas/PasswordValidatorServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        providerFactories: {}
        authenticationProviders: {}
        oAuth2authenticationProviders: {}
        em: {}
    AuthenticationServiceBean:
      type: object
      properties:
        authProvidersRegistrationService:
          $ref: '#/components/schemas/AuthenticationProvidersRegistrationServiceBean'
        builtinUserServiceBean:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        confirmEmailService:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        passwordResetServiceBean:
          $ref: '#/components/schemas/PasswordResetServiceBean'
        userService:
          $ref: '#/components/schemas/UserServiceBean'
        passwordValidatorService:
          $ref: '#/components/schemas/PasswordValidatorServiceBean'
        dvObjSvc:
          $ref: '#/components/schemas/DvObjectServiceBean'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        gbRespSvc:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        explicitGroupService:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        savedSearchService:
          $ref: '#/components/schemas/SavedSearchServiceBean'
        em: {}
    AuxiliaryFile:
      type: object
      properties:
        id:
          type: number
        dataFile:
          $ref: '#/components/schemas/DataFile'
        formatTag:
          type: string
        formatVersion:
          type: string
        origin:
          type: string
        isPublic:
          type: boolean
        contentType:
          type: string
        fileSize:
          type: number
        checksum:
          type: string
        type:
          type: string
    AuxiliaryFileServiceBean:
      type: object
      properties:
        em: {}
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    BannerMessage:
      type: object
      properties:
        id:
          type: number
        dismissibleByUser:
          type: boolean
        active:
          type: boolean
        bannerMessageTexts:
          items:
            $ref: '#/components/schemas/BannerMessageText'
        userBannerMessages:
          items:
            $ref: '#/components/schemas/UserBannerMessage'
    BannerMessageServiceBean:
      type: object
      properties:
        em: {}
    BannerMessageText:
      type: object
      properties:
        id:
          type: number
        message:
          type: string
        lang:
          type: string
        bannerMessage:
          $ref: '#/components/schemas/BannerMessage'
    Breadcrumb:
      type: object
      properties:
        breadcrumbText:
          type: string
        dvObject:
          $ref: '#/components/schemas/DvObject'
        url:
          type: string
        optionalUrlExtension:
          type: string
    BuiltinUser:
      type: object
      properties:
        id:
          type: number
        userName:
          type: string
        passwordEncryptionVersion:
          type: integer
        passwordResetData:
          $ref: '#/components/schemas/PasswordResetData'
        encryptedPassword:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        affiliation:
          type: string
        position:
          type: string
    BuiltinUserServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        passwordResetService:
          $ref: '#/components/schemas/PasswordResetServiceBean'
        em: {}
    BundleDownloadInstance:
      type: object
      properties:
        downloadInfo:
          $ref: '#/components/schemas/DownloadInfo'
        fileCitationEndNote:
          type: string
        fileCitationRIS:
          type: string
        fileDDIXML:
          type: string
        fileCitationBibtex:
          type: string
    Cart:
      type: object
      properties:
        contents:
          items:
            type: object
    CategoryMetadata:
      type: object
      properties:
        id:
          type: number
        category:
          $ref: '#/components/schemas/VariableCategory'
        variableMetadata:
          $ref: '#/components/schemas/VariableMetadata'
        wfreq:
          type: number
    ChecksumType:
      enum:
      - MD5
      - SHA1
      - SHA256
      - SHA512
    ClientHarvestRun:
      type: object
      properties:
        id:
          type: number
        harvestingClient:
          $ref: '#/components/schemas/HarvestingClient'
        harvestResult:
          $ref: '#/components/schemas/RunResultType'
        startTime: {}
        finishTime: {}
        harvestedDatasetCount:
          type: number
        failedDatasetCount:
          type: number
        deletedDatasetCount:
          type: number
    ConfirmEmailServiceBean:
      type: object
      properties:
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        em: {}
    ControlledVocabAlternate:
      type: object
      properties:
        id:
          type: number
        strValue:
          type: string
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        controlledVocabularyValue:
          $ref: '#/components/schemas/ControlledVocabularyValue'
    ControlledVocabularyValue:
      type: object
      properties:
        id:
          type: number
        strValue:
          type: string
        identifier:
          type: string
        displayOrder:
          type: integer
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        controlledVocabAlternates:
          items:
            $ref: '#/components/schemas/ControlledVocabAlternate'
    CustomQuestion:
      type: object
      properties:
        id:
          type: number
        guestbook:
          $ref: '#/components/schemas/Guestbook'
        customQuestionResponses:
          items:
            $ref: '#/components/schemas/CustomQuestionResponse'
        customQuestionValues:
          items:
            $ref: '#/components/schemas/CustomQuestionValue'
        questionType:
          type: string
        questionString:
          type: string
        required:
          type: boolean
        hidden:
          type: boolean
        displayOrder:
          type: integer
    CustomQuestionResponse:
      type: object
      properties:
        id:
          type: number
        guestbookResponse:
          $ref: '#/components/schemas/GuestbookResponse'
        customQuestion:
          $ref: '#/components/schemas/CustomQuestion'
        response:
          type: string
        responseSelectItems:
          items:
            type: object
    CustomQuestionValue:
      type: object
      properties:
        id:
          type: number
        valueString:
          type: string
        displayOrder:
          type: integer
        customQuestion:
          $ref: '#/components/schemas/CustomQuestion'
    DOIDataCiteRegisterService:
      type: object
      properties:
        em: {}
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        doiDataCiteServiceBean:
          $ref: '#/components/schemas/DOIDataCiteServiceBean'
        client:
          $ref: '#/components/schemas/DataCiteRESTfullClient'
    DOIDataCiteServiceBean:
      type: object
      properties:
        doiDataCiteRegisterService:
          $ref: '#/components/schemas/DOIDataCiteRegisterService'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DOIServiceBean'
    DOIEZIdServiceBean:
      type: object
      properties:
        ezidService:
          $ref: '#/components/schemas/EZIDService'
        baseUrl:
          type: string
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DOIServiceBean'
    DOIServiceBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/AbstractGlobalIdServiceBean'
      - $ref: '#/components/schemas/AbstractGlobalIdServiceBean'
      - $ref: '#/components/schemas/AbstractGlobalIdServiceBean'
    DataCaptureModuleServiceBean:
      type: object
    DataCiteRESTfullClient:
      type: object
      properties:
        url:
          type: string
        httpClient:
          $ref: '#/components/schemas/CloseableHttpClient'
        context:
          $ref: '#/components/schemas/HttpClientContext'
        encoding:
          type: string
    DataFile:
      type: object
      properties:
        contentType:
          type: string
        checksumType:
          $ref: '#/components/schemas/ChecksumType'
        checksumValue:
          type: string
        rootDataFileId:
          type: number
        previousDataFileId:
          type: number
        filesize:
          type: number
        restricted:
          type: boolean
        provEntityName:
          type: string
        dataTables:
          items:
            $ref: '#/components/schemas/DataTable'
        auxiliaryFiles:
          items:
            $ref: '#/components/schemas/AuxiliaryFile'
        ingestReports:
          items:
            $ref: '#/components/schemas/IngestReport'
        ingestRequest:
          $ref: '#/components/schemas/IngestRequest'
        dataFileTags:
          items:
            $ref: '#/components/schemas/DataFileTag'
        fileMetadatas:
          items:
            $ref: '#/components/schemas/FileMetadata'
        guestbookResponses:
          items:
            $ref: '#/components/schemas/GuestbookResponse'
        ingestStatus:
          type: object
        thumbnailForDataset:
          $ref: '#/components/schemas/Dataset'
        embargo:
          $ref: '#/components/schemas/Embargo'
        deleted:
          type: boolean
        markedAsDuplicate:
          type: boolean
        duplicateFilename:
          type: string
        fileAccessRequests:
          items:
            $ref: '#/components/schemas/FileAccessRequest'
        id:
          type: number
        owner: {}
        publicationDate: {}
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate: {}
        modificationTime: {}
        indexTime: {}
        permissionModificationTime: {}
        permissionIndexTime: {}
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime: {}
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          items:
            $ref: '#/components/schemas/RoleAssignment'
        mergeable:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DvObject'
    DataFileCategory:
      type: object
      properties:
        id:
          type: number
        dataset:
          $ref: '#/components/schemas/Dataset'
        name:
          type: string
        fileMetadatas:
          items:
            $ref: '#/components/schemas/FileMetadata'
    DataFileServiceBean:
      type: object
      properties:
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        userService:
          $ref: '#/components/schemas/UserServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        ingestService:
          $ref: '#/components/schemas/IngestServiceBean'
        embargoService:
          $ref: '#/components/schemas/EmbargoServiceBean'
        em: {}
    DataFileTag:
      type: object
      properties:
        id:
          type: number
        dataFile:
          $ref: '#/components/schemas/DataFile'
        type:
          $ref: '#/components/schemas/TagType'
    DataTable:
      type: object
      properties:
        id:
          type: number
        unf:
          type: string
        caseQuantity:
          type: number
        varQuantity:
          type: number
        recordsPerCase:
          type: number
        dataFile:
          $ref: '#/components/schemas/DataFile'
        dataVariables:
          items:
            $ref: '#/components/schemas/DataVariable'
        originalFileFormat:
          type: string
        originalFormatVersion:
          type: string
        originalFileSize:
          type: number
        originalFileName:
          type: string
    DataVariable:
      type: object
      properties:
        id:
          type: number
        dataTable:
          $ref: '#/components/schemas/DataTable'
        name:
          type: string
        label:
          type: string
        weighted:
          type: boolean
        fileStartPosition:
          type: number
        fileEndPosition:
          type: number
        interval:
          $ref: '#/components/schemas/VariableInterval'
        type:
          $ref: '#/components/schemas/VariableType'
        format:
          type: string
        formatCategory:
          type: string
        recordSegmentNumber:
          type: number
        invalidRanges:
          items:
            $ref: '#/components/schemas/VariableRange'
        invalidRangeItems:
          items:
            $ref: '#/components/schemas/VariableRangeItem'
        summaryStatistics:
          items:
            $ref: '#/components/schemas/SummaryStatistic'
        unf:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/VariableCategory'
        orderedFactor:
          type: boolean
        factor:
          type: boolean
        fileOrder:
          type: integer
        numberOfDecimalPoints:
          type: number
        variableMetadatas:
          items:
            $ref: '#/components/schemas/VariableMetadata'
    Dataset:
      type: object
      properties:
        files:
          items:
            $ref: '#/components/schemas/DataFile'
        lastExportTime: {}
        versions:
          items:
            $ref: '#/components/schemas/DatasetVersion'
        datasetLocks:
          items:
            $ref: '#/components/schemas/DatasetLock'
        thumbnailFile:
          $ref: '#/components/schemas/DataFile'
        datasetMetrics:
          items:
            $ref: '#/components/schemas/DatasetMetrics'
        datasetExternalCitations:
          items:
            $ref: '#/components/schemas/DatasetExternalCitations'
        useGenericThumbnail:
          type: boolean
        guestbook:
          $ref: '#/components/schemas/Guestbook'
        datasetLinkingDataverses:
          items:
            $ref: '#/components/schemas/DatasetLinkingDataverse'
        fileAccessRequest:
          type: boolean
        dataFileCategories:
          items:
            $ref: '#/components/schemas/DataFileCategory'
        citationDateDatasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        template:
          $ref: '#/components/schemas/Template'
        harvestedFrom:
          $ref: '#/components/schemas/HarvestingClient'
        harvestIdentifier:
          type: string
        storageDriver:
          type: string
        metadataLanguage:
          type: string
        externalLabelSetName:
          type: string
        id:
          type: number
        owner: {}
        publicationDate: {}
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate: {}
        modificationTime: {}
        indexTime: {}
        permissionModificationTime: {}
        permissionIndexTime: {}
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime: {}
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          items:
            $ref: '#/components/schemas/RoleAssignment'
        mergeable:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DvObjectContainer'
    DatasetExternalCitations:
      type: object
      properties:
        id:
          type: number
        dataset:
          $ref: '#/components/schemas/Dataset'
        citedByUrl:
          type: string
    DatasetField:
      type: object
      properties:
        id:
          type: number
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        template:
          $ref: '#/components/schemas/Template'
        parentDatasetFieldCompoundValue:
          $ref: '#/components/schemas/DatasetFieldCompoundValue'
        datasetFieldCompoundValues:
          items:
            $ref: '#/components/schemas/DatasetFieldCompoundValue'
        datasetFieldValues:
          items:
            $ref: '#/components/schemas/DatasetFieldValue'
        controlledVocabularyValues:
          items:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        validationMessage:
          type: string
        required:
          type: boolean
        hasRequiredChildren:
          type: boolean
        include:
          type: boolean
    DatasetFieldCompoundValue:
      type: object
      properties:
        id:
          type: number
        displayOrder:
          type: integer
        parentDatasetField:
          $ref: '#/components/schemas/DatasetField'
        childDatasetFields:
          items:
            $ref: '#/components/schemas/DatasetField'
        linkMap: {}
        linkScheme:
          type: string
        linkValue:
          type: string
    DatasetFieldDefaultValue:
      type: object
      properties:
        id:
          type: number
        datasetField:
          $ref: '#/components/schemas/DatasetFieldType'
        defaultValueSet:
          $ref: '#/components/schemas/DefaultValueSet'
        childDatasetFieldDefaultValues:
          items:
            $ref: '#/components/schemas/DatasetFieldDefaultValue'
        parentDatasetFieldDefaultValue: {}
        strValue:
          type: string
        displayOrder:
          type: integer
    DatasetFieldServiceBean:
      type: object
      properties:
        em: {}
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        cvocMap: {}
        cvocMapByTermUri: {}
        oldHash:
          type: string
    DatasetFieldType:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        title:
          type: string
        description:
          type: string
        fieldType:
          $ref: '#/components/schemas/FieldType'
        allowControlledVocabulary:
          type: boolean
        watermark:
          type: string
        validationFormat:
          type: string
        dataverseFacets:
          items:
            $ref: '#/components/schemas/DataverseFacet'
        dataverseFieldTypeInputLevels:
          items:
            $ref: '#/components/schemas/DataverseFieldTypeInputLevel'
        searchValue:
          type: string
        listValues:
          items:
            type: string
        controlledVocabularyValuesByStrValue: {}
        requiredDV:
          type: boolean
        include:
          type: boolean
        optionSelectItems:
          items:
            type: object
        displayOrder:
          type: integer
        displayFormat:
          type: string
        allowMultiples:
          type: boolean
        facetable:
          type: boolean
        displayOnCreate:
          type: boolean
        metadataBlock:
          $ref: '#/components/schemas/MetadataBlock'
        uri:
          type: string
        controlledVocabularyValues:
          items:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        childDatasetFieldTypes:
          items:
            $ref: '#/components/schemas/DatasetFieldType'
        parentDatasetFieldType: {}
        required:
          type: boolean
        advancedSearchFieldType:
          type: boolean
        datasetFields:
          items:
            $ref: '#/components/schemas/DatasetField'
        datasetFieldDefaultValues:
          items:
            $ref: '#/components/schemas/DatasetFieldDefaultValue'
    DatasetFieldValue:
      type: object
      properties:
        id:
          type: number
        value:
          type: string
        displayOrder:
          type: integer
        datasetField:
          $ref: '#/components/schemas/DatasetField'
        validationMessage:
          type: string
    DatasetLinkingDataverse:
      type: object
      properties:
        id:
          type: number
        dataset:
          $ref: '#/components/schemas/Dataset'
        linkingDataverse:
          $ref: '#/components/schemas/Dataverse'
        linkCreateTime: {}
    DatasetLinkingServiceBean:
      type: object
      properties:
        em: {}
    DatasetLock:
      type: object
      properties:
        id:
          type: number
        startTime: {}
        dataset:
          $ref: '#/components/schemas/Dataset'
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        reason:
          $ref: '#/components/schemas/Reason'
        info:
          type: string
    DatasetMetrics:
      type: object
      properties:
        id:
          type: number
        dataset:
          $ref: '#/components/schemas/Dataset'
        monthYear:
          type: string
        viewsTotalRegular:
          type: number
        viewsUniqueRegular:
          type: number
        viewsTotalMachine:
          type: number
        viewsUniqueMachine:
          type: number
        downloadsTotalRegular:
          type: number
        downloadsUniqueRegular:
          type: number
        downloadsTotalMachine:
          type: number
        downloadsUniqueMachine:
          type: number
        countryCode:
          type: string
        viewsUnique:
          type: number
        viewsTotal:
          type: number
        downloadsUnique:
          type: number
        downloadsTotal:
          type: number
    DatasetServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        doiEZIdServiceBean:
          $ref: '#/components/schemas/DOIEZIdServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        versionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        authentication:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        fileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        recordService:
          $ref: '#/components/schemas/OAIRecordServiceBean'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        globusServiceBean:
          $ref: '#/components/schemas/GlobusServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        em: {}
    DatasetVersion:
      type: object
      properties:
        id:
          type: number
        UNF:
          type: string
        version:
          type: number
        versionNumber:
          type: number
        minorVersionNumber:
          type: number
        versionNote:
          type: string
        versionState:
          $ref: '#/components/schemas/VersionState'
        dataset:
          $ref: '#/components/schemas/Dataset'
        fileMetadatas:
          items:
            $ref: '#/components/schemas/FileMetadata'
        termsOfUseAndAccess:
          $ref: '#/components/schemas/TermsOfUseAndAccess'
        datasetFields:
          items:
            $ref: '#/components/schemas/DatasetField'
        createTime: {}
        lastUpdateTime: {}
        releaseTime: {}
        archiveTime: {}
        archiveNote:
          type: string
        archivalCopyLocation:
          type: string
        deaccessionLink:
          type: string
        contributorNames:
          type: string
        dataverseSiteUrl:
          type: string
        jsonLd:
          type: string
        datasetVersionUsers:
          items:
            $ref: '#/components/schemas/DatasetVersionUser'
        workflowComments:
          items:
            $ref: '#/components/schemas/WorkflowComment'
        externalStatusLabel:
          type: string
        dvd:
          $ref: '#/components/schemas/DatasetVersionDifference'
        archivalStatus: {}
    DatasetVersionDifference:
      type: object
      properties:
        newVersion:
          $ref: '#/components/schemas/DatasetVersion'
        originalVersion:
          $ref: '#/components/schemas/DatasetVersion'
        detailDataByBlock:
          items:
            type: array
            items:
              $ref: '#/components/schemas/DatasetField'
        datasetFilesDiffList:
          items:
            $ref: '#/components/schemas/datasetFileDifferenceItem'
        datasetFilesReplacementList:
          items:
            $ref: '#/components/schemas/datasetReplaceFileItem'
        addedFiles:
          items:
            $ref: '#/components/schemas/FileMetadata'
        removedFiles:
          items:
            $ref: '#/components/schemas/FileMetadata'
        changedFileMetadata:
          items:
            $ref: '#/components/schemas/FileMetadata'
        changedVariableMetadata:
          items:
            $ref: '#/components/schemas/FileMetadata'
        replacedFiles:
          items:
            $ref: '#/components/schemas/FileMetadata'
        changedTermsAccess:
          items:
            type: string
        summaryDataForNote: {}
        blockDataForNote: {}
        variableMetadataUtil:
          $ref: '#/components/schemas/VariableMetadataUtil'
        differenceSummaryGroups:
          items:
            $ref: '#/components/schemas/DifferenceSummaryGroup'
    DatasetVersionServiceBean:
      type: object
      properties:
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        em: {}
    DatasetVersionUser:
      type: object
      properties:
        id:
          type: number
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        lastUpdateDate: {}
    Dataverse:
      type: object
      properties:
        name:
          type: string
        alias:
          type: string
        description:
          type: string
        dataverseType:
          $ref: '#/components/schemas/DataverseType'
        permissionRoot:
          type: boolean
        affiliation:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/DataverseRole'
        defaultContributorRole:
          $ref: '#/components/schemas/DataverseRole'
        metadataBlockRoot:
          type: boolean
        facetRoot:
          type: boolean
        themeRoot:
          type: boolean
        templateRoot:
          type: boolean
        dataverseTheme:
          $ref: '#/components/schemas/DataverseTheme'
        dataverseContacts:
          items:
            $ref: '#/components/schemas/DataverseContact'
        metadataBlocks:
          items:
            $ref: '#/components/schemas/MetadataBlock'
        dataverseFacets:
          items:
            $ref: '#/components/schemas/DataverseFacet'
        citationDatasetFieldTypes:
          items:
            $ref: '#/components/schemas/DatasetFieldType'
        dataverseSubjects:
          items:
            $ref: '#/components/schemas/ControlledVocabularyValue'
        dataverseFeaturedDataverses:
          items:
            $ref: '#/components/schemas/DataverseFeaturedDataverse'
        dataverseFeaturingDataverses:
          items:
            $ref: '#/components/schemas/DataverseFeaturedDataverse'
        dataverseLinkingDataverses:
          items:
            $ref: '#/components/schemas/DataverseLinkingDataverse'
        dataverseLinkedDataverses:
          items:
            $ref: '#/components/schemas/DataverseLinkingDataverse'
        datasetLinkingDataverses:
          items:
            $ref: '#/components/schemas/DatasetLinkingDataverse'
        dataverseFieldTypeInputLevels:
          items:
            $ref: '#/components/schemas/DataverseFieldTypeInputLevel'
        defaultTemplate:
          $ref: '#/components/schemas/Template'
        savedSearches:
          items:
            $ref: '#/components/schemas/SavedSearch'
        templates:
          items:
            $ref: '#/components/schemas/Template'
        guestbooks:
          items:
            $ref: '#/components/schemas/Guestbook'
        harvestingClientConfigs:
          items:
            $ref: '#/components/schemas/HarvestingClient'
        metadataBlockFacetRoot:
          type: boolean
        metadataBlockFacets:
          items:
            $ref: '#/components/schemas/DataverseMetadataBlockFacet'
        guestbookRoot:
          type: boolean
        filePIDsEnabled:
          type: boolean
        storageDriver:
          type: string
        metadataLanguage:
          type: string
        externalLabelSetName:
          type: string
        id:
          type: number
        owner: {}
        publicationDate: {}
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate: {}
        modificationTime: {}
        indexTime: {}
        permissionModificationTime: {}
        permissionIndexTime: {}
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime: {}
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          items:
            $ref: '#/components/schemas/RoleAssignment'
        mergeable:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DvObjectContainer'
    DataverseContact:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        contactEmail:
          type: string
        displayOrder:
          type: integer
    DataverseEntity:
      type: object
      properties:
        mergeable:
          type: boolean
    DataverseFacet:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        displayOrder:
          type: integer
    DataverseFacetServiceBean:
      type: object
      properties:
        em: {}
        dataverses:
          $ref: '#/components/schemas/DataverseServiceBean'
    DataverseFeaturedDataverse:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        featuredDataverse:
          $ref: '#/components/schemas/Dataverse'
        displayOrder:
          type: integer
    DataverseFieldTypeInputLevel:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        datasetFieldType:
          $ref: '#/components/schemas/DatasetFieldType'
        include:
          type: boolean
        required:
          type: boolean
    DataverseFieldTypeInputLevelServiceBean:
      type: object
      properties:
        em: {}
    DataverseHeaderFragment:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        bannerMessageService:
          $ref: '#/components/schemas/BannerMessageServiceBean'
        dataverseSession:
          $ref: '#/components/schemas/DataverseSession'
        settingsWrapper:
          $ref: '#/components/schemas/SettingsWrapper'
        navigationWrapper:
          $ref: '#/components/schemas/NavigationWrapper'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        breadcrumbs:
          items:
            $ref: '#/components/schemas/Breadcrumb'
        bannerMessages:
          items:
            $ref: '#/components/schemas/BannerMessage'
        unreadNotificationCount:
          type: number
        signupAllowed:
          type: boolean
    DataverseLinkingDataverse:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        linkingDataverse:
          $ref: '#/components/schemas/Dataverse'
        linkCreateTime: {}
    DataverseLinkingServiceBean:
      type: object
      properties:
        em: {}
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
    DataverseMetadataBlockFacet:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        metadataBlock:
          $ref: '#/components/schemas/MetadataBlock'
    DataverseRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        sourceAddress:
          $ref: '#/components/schemas/IpAddress'
        invocationId:
          type: string
        httpServletRequest: {}
    DataverseRequestServiceBean:
      type: object
      properties:
        dataverseSessionSvc:
          $ref: '#/components/schemas/DataverseSession'
        request: {}
        dataverseRequest:
          $ref: '#/components/schemas/DataverseRequest'
    DataverseRole:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        description:
          type: string
        alias:
          type: string
        permissionBits:
          type: number
        owner:
          $ref: '#/components/schemas/DvObject'
    DataverseRoleServiceBean:
      type: object
      properties:
        em: {}
        roleAssigneeService:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        indexAsync:
          $ref: '#/components/schemas/IndexAsync'
    DataverseServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dataverseLinkingService:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        datasetLinkingService:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        rolesService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        session:
          $ref: '#/components/schemas/DataverseSession'
        em: {}
    DataverseSession:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        permissionsService:
          $ref: '#/components/schemas/PermissionServiceBean'
        usersSvc:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        logSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        settingsWrapper:
          $ref: '#/components/schemas/SettingsWrapper'
        headerFragment:
          $ref: '#/components/schemas/DataverseHeaderFragment'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        bannerMessageService:
          $ref: '#/components/schemas/BannerMessageServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        statusDismissed:
          type: boolean
        dismissedMessages:
          items:
            $ref: '#/components/schemas/BannerMessage'
        debug:
          type: boolean
        localeCode:
          type: string
    DataverseTheme:
      type: object
      properties:
        id:
          type: number
        logoFormat:
          $ref: '#/components/schemas/ImageFormat'
        logoAlignment:
          $ref: '#/components/schemas/Alignment'
        logoBackgroundColor:
          type: string
        logo:
          type: string
        logoFooterAlignment:
          $ref: '#/components/schemas/Alignment'
        logoFooterBackgroundColor:
          type: string
        logoFooter:
          type: string
        tagline:
          type: string
        linkUrl:
          type: string
        linkColor:
          type: string
        textColor:
          type: string
        backgroundColor:
          type: string
        dataverse:
          $ref: '#/components/schemas/Dataverse'
    DataverseType:
      enum:
      - RESEARCHERS
      - RESEARCH_PROJECTS
      - JOURNALS
      - ORGANIZATIONS_INSTITUTIONS
      - TEACHING_COURSES
      - UNCATEGORIZED
      - LABORATORY
      - RESEARCH_GROUP
      - DEPARTMENT
    DefaultValueSet:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        datasetFieldDefaultValues:
          items:
            $ref: '#/components/schemas/DatasetFieldDefaultValue'
    DifferenceSummaryGroup:
      type: object
      properties:
        displayName:
          type: string
        type:
          type: string
        differenceSummaryItems:
          items:
            $ref: '#/components/schemas/DifferenceSummaryItem'
    DifferenceSummaryItem:
      type: object
      properties:
        displayName:
          type: string
        changed:
          type: integer
        added:
          type: integer
        deleted:
          type: integer
        replaced:
          type: integer
        multiple:
          type: boolean
    DownloadInfo:
      type: object
      properties:
        dataFile:
          $ref: '#/components/schemas/DataFile'
        authUserName:
          type: string
        authMethod:
          type: string
        accessGranted:
          type: boolean
        accessPermissionsApply:
          type: boolean
        accessRestrictionsApply:
          type: boolean
        passAccessPermissions:
          type: boolean
        passAccessRestrictions:
          type: boolean
        optionalServicesAvailable:
          items:
            $ref: '#/components/schemas/OptionalAccessService'
    DownloadInstance:
      type: object
      properties:
        extraArguments: {}
        downloadInfo:
          $ref: '#/components/schemas/DownloadInfo'
        conversionParam:
          type: string
        conversionParamValue:
          type: string
        auxiliaryFile:
          $ref: '#/components/schemas/AuxiliaryFile'
        command:
          $ref: '#/components/schemas/EjbDataverseEngine'
        dataverseRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        gbr:
          $ref: '#/components/schemas/GuestbookResponse'
        requestUriInfo: {}
        requestHttpHeaders: {}
    DvObject:
      type: object
      properties:
        id:
          type: number
        owner: {}
        publicationDate: {}
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate: {}
        modificationTime: {}
        indexTime: {}
        permissionModificationTime: {}
        permissionIndexTime: {}
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime: {}
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          items:
            $ref: '#/components/schemas/RoleAssignment'
        mergeable:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DataverseEntity'
      - $ref: '#/components/schemas/DataverseEntity'
      - $ref: '#/components/schemas/DataverseEntity'
      - $ref: '#/components/schemas/DataverseEntity'
    DvObjectContainer:
      type: object
      properties:
        storageDriver:
          type: string
        metadataLanguage:
          type: string
        externalLabelSetName:
          type: string
        id:
          type: number
        owner: {}
        publicationDate: {}
        releaseUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        createDate: {}
        modificationTime: {}
        indexTime: {}
        permissionModificationTime: {}
        permissionIndexTime: {}
        storageIdentifier:
          type: string
        dtype:
          type: string
        protocol:
          type: string
        authority:
          type: string
        globalIdCreateTime: {}
        identifier:
          type: string
        identifierRegistered:
          type: boolean
        alternativePersistentIndentifiers:
          items:
            $ref: '#/components/schemas/AlternativePersistentIdentifier'
        previewImageAvailable:
          type: boolean
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
        roleAssignments:
          items:
            $ref: '#/components/schemas/RoleAssignment'
        mergeable:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DvObject'
      - $ref: '#/components/schemas/DvObject'
    DvObjectServiceBean:
      type: object
      properties:
        em: {}
    EjbDataverseEngine:
      type: object
      properties:
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        rolesService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        usersService:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        indexBatchService:
          $ref: '#/components/schemas/IndexBatchServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        searchService:
          $ref: '#/components/schemas/SearchServiceBean'
        ingestService:
          $ref: '#/components/schemas/IngestServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        dataverseFacetService:
          $ref: '#/components/schemas/DataverseFacetServiceBean'
        featuredDataverseService:
          $ref: '#/components/schemas/FeaturedDataverseServiceBean'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        templateService:
          $ref: '#/components/schemas/TemplateServiceBean'
        savedSearchService:
          $ref: '#/components/schemas/SavedSearchServiceBean'
        fieldTypeInputLevels:
          $ref: '#/components/schemas/DataverseFieldTypeInputLevelServiceBean'
        doiEZId:
          $ref: '#/components/schemas/DOIEZIdServiceBean'
        doiDataCite:
          $ref: '#/components/schemas/DOIDataCiteServiceBean'
        fakePidProvider:
          $ref: '#/components/schemas/FakePidProviderServiceBean'
        handleNet:
          $ref: '#/components/schemas/HandlenetServiceBean'
        permaLinkProvider:
          $ref: '#/components/schemas/PermaLinkPidProviderServiceBean'
        settings:
          $ref: '#/components/schemas/SettingsServiceBean'
        guestbookService:
          $ref: '#/components/schemas/GuestbookServiceBean'
        responses:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        dvLinking:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        dsLinking:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        explicitGroups:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        groups:
          $ref: '#/components/schemas/GroupServiceBean'
        roleAssignees:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        authentication:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        privateUrlService:
          $ref: '#/components/schemas/PrivateUrlServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        dataCaptureModule:
          $ref: '#/components/schemas/DataCaptureModuleServiceBean'
        em: {}
        logSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        workflowService:
          $ref: '#/components/schemas/WorkflowServiceBean'
        fileDownloadService:
          $ref: '#/components/schemas/FileDownloadServiceBean'
        confirmEmailService:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        innerEngine:
          $ref: '#/components/schemas/EjbDataverseEngineInner'
        ejbCtxt: {}
        ctxt:
          $ref: '#/components/schemas/CommandContext'
    EjbDataverseEngineInner:
      type: object
      properties:
        ejbCtxt: {}
    Embargo:
      type: object
      properties:
        id:
          type: number
        dateAvailable:
          type: object
        reason:
          type: string
        dataFiles:
          items:
            $ref: '#/components/schemas/DataFile'
    EmbargoServiceBean:
      type: object
      properties:
        em: {}
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
    ExplicitGroupDTO:
      type: object
      properties:
        description:
          type: string
        displayName:
          type: string
        aliasInOwner:
          type: string
    ExplicitGroupProvider:
      type: object
      properties:
        explicitGroupSvc:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
    ExplicitGroupServiceBean:
      type: object
      properties:
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        em: {}
        provider:
          $ref: '#/components/schemas/ExplicitGroupProvider'
    ExternalTool:
      type: object
      properties:
        id:
          type: number
        displayName:
          type: string
        toolName:
          type: string
        description:
          type: string
        externalToolTypes:
          items:
            $ref: '#/components/schemas/ExternalToolType'
        scope:
          $ref: '#/components/schemas/Scope'
        toolUrl:
          type: string
        toolParameters:
          type: string
        contentType:
          type: string
        allowedApiCalls:
          type: string
        requirements:
          type: string
    ExternalToolType:
      type: object
      properties:
        id:
          type: number
        type:
          $ref: '#/components/schemas/Type'
        externalTool:
          $ref: '#/components/schemas/ExternalTool'
    FakePidProviderServiceBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DOIServiceBean'
    FeaturedDataverseServiceBean:
      type: object
      properties:
        em: {}
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
    FieldType:
      enum:
      - TEXT
      - TEXTBOX
      - DATE
      - EMAIL
      - URL
      - FLOAT
      - INT
      - NONE
    FileAccessRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FileAccessRequestKey'
        dataFile:
          $ref: '#/components/schemas/DataFile'
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        creationTime: {}
    FileAccessRequestKey:
      type: object
      properties:
        dataFile:
          type: number
        authenticatedUser:
          type: number
    FileDifferenceDetailItem:
      type: object
      properties:
        displayName:
          type: string
        originalValue:
          type: string
        newValue:
          type: string
    FileDifferenceSummaryGroup:
      type: object
      properties:
        name:
          type: string
        fileDifferenceSummaryItems:
          items:
            $ref: '#/components/schemas/FileDifferenceSummaryItem'
    FileDifferenceSummaryItem:
      type: object
      properties:
        name:
          type: string
        added:
          type: integer
        changed:
          type: integer
        deleted:
          type: integer
        replaced:
          type: integer
        multiple:
          type: boolean
    FileDownload:
      type: object
      properties:
        id:
          type: number
        guestbookResponse:
          $ref: '#/components/schemas/GuestbookResponse'
        downloadTimestamp: {}
        selectedFileIds:
          type: string
        fileFormat:
          type: string
        downloadtype:
          type: string
        sessionId:
          type: string
    FileDownloadHelper:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/DataverseSession'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        fileDownloadService:
          $ref: '#/components/schemas/FileDownloadServiceBean'
        guestbookResponseService:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        fileDownloadPermissionMap: {}
        filesForRequestAccess:
          items:
            $ref: '#/components/schemas/DataFile'
        selectedFileId:
          type: string
    FileDownloadServiceBean:
      type: object
      properties:
        em: {}
        guestbookResponseService:
          $ref: '#/components/schemas/GuestbookResponseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        datafileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        privateUrlService:
          $ref: '#/components/schemas/PrivateUrlServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        session:
          $ref: '#/components/schemas/DataverseSession'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        fileDownloadHelper:
          $ref: '#/components/schemas/FileDownloadHelper'
        mdcLogService:
          $ref: '#/components/schemas/MakeDataCountLoggingServiceBean'
    FileMetadata:
      type: object
      properties:
        label:
          type: string
        directoryLabel:
          type: string
        description:
          type: string
        restricted:
          type: boolean
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        dataFile:
          $ref: '#/components/schemas/DataFile'
        provFreeForm:
          type: string
        variableMetadatas:
          items:
            $ref: '#/components/schemas/VariableMetadata'
        varGroups:
          items:
            $ref: '#/components/schemas/VarGroup'
        fileCategories:
          items:
            $ref: '#/components/schemas/DataFileCategory'
        id:
          type: number
        version:
          type: number
        inPriorVersion:
          type: boolean
        selected:
          type: boolean
        restrictedUI:
          type: boolean
        fileVersionDifference:
          $ref: '#/components/schemas/FileVersionDifference'
        contributorNames:
          type: string
    FileVersionDifference:
      type: object
      properties:
        newFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        originalFileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        details:
          type: boolean
        same:
          type: boolean
        differenceSummaryGroups:
          items:
            $ref: '#/components/schemas/FileDifferenceSummaryGroup'
        differenceDetailItems:
          items:
            $ref: '#/components/schemas/FileDifferenceDetailItem'
    GlobusServiceBean:
      type: object
      properties:
        datasetSvc:
          $ref: '#/components/schemas/DatasetServiceBean'
        settingsSvc:
          $ref: '#/components/schemas/SettingsServiceBean'
        session:
          $ref: '#/components/schemas/DataverseSession'
        authSvc:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        code:
          type: string
        userTransferToken:
          type: string
        state:
          type: string
        executor: {}
    GroupServiceBean:
      type: object
      properties:
        ipGroupsService:
          $ref: '#/components/schemas/IpGroupsServiceBean'
        shibGroupService:
          $ref: '#/components/schemas/ShibGroupServiceBean'
        explicitGroupService:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        mailDomainGroupService:
          $ref: '#/components/schemas/MailDomainGroupServiceBean'
        groupProviders: {}
        ipGroupProvider:
          $ref: '#/components/schemas/IpGroupProvider'
        shibGroupProvider:
          $ref: '#/components/schemas/ShibGroupProvider'
        explicitGroupProvider:
          $ref: '#/components/schemas/ExplicitGroupProvider'
        mailDomainGroupProvider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
    Guestbook:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        customQuestions:
          items:
            $ref: '#/components/schemas/CustomQuestion'
        name:
          type: string
        enabled:
          type: boolean
        nameRequired:
          type: boolean
        emailRequired:
          type: boolean
        institutionRequired:
          type: boolean
        positionRequired:
          type: boolean
        createTime: {}
        deletable:
          type: boolean
        usageCount:
          type: number
        usageCountDataverse:
          type: number
        responseCount:
          type: number
        responseCountDataverse:
          type: number
    GuestbookResponse:
      type: object
      properties:
        id:
          type: number
        guestbook:
          $ref: '#/components/schemas/Guestbook'
        dataFile:
          $ref: '#/components/schemas/DataFile'
        dataset:
          $ref: '#/components/schemas/Dataset'
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        fileDownload:
          $ref: '#/components/schemas/FileDownload'
        customQuestionResponses:
          items:
            $ref: '#/components/schemas/CustomQuestionResponse'
        name:
          type: string
        email:
          type: string
        institution:
          type: string
        position:
          type: string
        responseTime: {}
        writeResponse:
          type: boolean
        externalTool:
          $ref: '#/components/schemas/ExternalTool'
    GuestbookResponseServiceBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        em: {}
    GuestbookServiceBean:
      type: object
      properties:
        em: {}
    HandlenetServiceBean:
      type: object
      properties:
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        handlenetIndex:
          type: integer
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/AbstractGlobalIdServiceBean'
    HarvestingClient:
      type: object
      properties:
        id:
          type: number
        dataverse:
          $ref: '#/components/schemas/Dataverse'
        harvestedDatasets:
          items:
            $ref: '#/components/schemas/Dataset'
        name:
          type: string
        harvestType:
          type: string
        harvestStyle:
          type: string
        harvestingUrl:
          type: string
        archiveUrl:
          type: string
        archiveDescription:
          type: string
        harvestingSet:
          type: string
        metadataPrefix:
          type: string
        customHttpHeaders:
          type: string
        harvestHistory:
          items:
            $ref: '#/components/schemas/ClientHarvestRun'
        scheduled:
          type: boolean
        schedulePeriod:
          type: string
        scheduleHourOfDay:
          type: integer
        scheduleDayOfWeek:
          type: integer
        harvestingNow:
          type: boolean
        deleted:
          type: boolean
    ImageFormat:
      enum:
      - SQUARE
      - RECTANGLE
    IndexAsync:
      type: object
      properties:
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
    IndexBatchServiceBean:
      type: object
      properties:
        em: {}
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    IndexServiceBean:
      type: object
      properties:
        em: {}
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        dataverseUserServiceBean:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        userServiceBean:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        searchPermissionsService:
          $ref: '#/components/schemas/SearchPermissionsServiceBean'
        solrIndexService:
          $ref: '#/components/schemas/SolrIndexServiceBean'
        dsLinkingService:
          $ref: '#/components/schemas/DatasetLinkingServiceBean'
        dvLinkingService:
          $ref: '#/components/schemas/DataverseLinkingServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        variableService:
          $ref: '#/components/schemas/VariableServiceBean'
        indexBatchService:
          $ref: '#/components/schemas/IndexBatchServiceBean'
        datasetFieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        rootDataverseName:
          type: string
        rootDataverseCached:
          $ref: '#/components/schemas/Dataverse'
        solrServer:
          $ref: '#/components/schemas/SolrClient'
        variableMetadataUtil:
          $ref: '#/components/schemas/VariableMetadataUtil'
    IngestReport:
      type: object
      properties:
        id:
          type: number
        dataFile:
          $ref: '#/components/schemas/DataFile'
        report:
          type: string
        type:
          type: integer
        status:
          type: integer
        startTime: {}
        endTime: {}
    IngestRequest:
      type: object
      properties:
        id:
          type: number
        dataFile:
          $ref: '#/components/schemas/DataFile'
        textEncoding:
          type: string
        controlCard:
          type: string
        labelsFile:
          type: string
        forceTypeCheck:
          type: boolean
    IngestServiceBean:
      type: object
      properties:
        variableService:
          $ref: '#/components/schemas/VariableServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        fieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        fileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        auxiliaryFileService:
          $ref: '#/components/schemas/AuxiliaryFileServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        queue: {}
        factory: {}
    IpAddress:
      type: object
    IpGroupProvider:
      type: object
      properties:
        ipGroupsService:
          $ref: '#/components/schemas/IpGroupsServiceBean'
    IpGroupsServiceBean:
      type: object
      properties:
        em: {}
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
    License:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        shortDescription:
          type: string
        uri:
          type: string
        iconUrl:
          type: string
        active:
          type: boolean
        isDefault:
          type: boolean
        sortOrder:
          type: number
        termsOfUseAndAccess:
          items:
            $ref: '#/components/schemas/TermsOfUseAndAccess'
    MailDomainGroup:
      type: object
      properties:
        emailDomains:
          type: string
        isRegEx:
          type: boolean
        provider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        id:
          type: number
        persistedGroupAlias:
          type: string
        displayName:
          type: string
        description:
          type: string
      allOf:
      - $ref: '#/components/schemas/PersistedGlobalGroup'
    MailDomainGroupProvider:
      type: object
      properties:
        emailGroupSvc:
          $ref: '#/components/schemas/MailDomainGroupServiceBean'
    MailDomainGroupServiceBean:
      type: object
      properties:
        em: {}
        confirmEmailSvc:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
        provider:
          $ref: '#/components/schemas/MailDomainGroupProvider'
        simpleGroups:
          items:
            $ref: '#/components/schemas/MailDomainGroup'
        regexGroups: {}
    MailServiceBean:
      type: object
      properties:
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        dataFileService:
          $ref: '#/components/schemas/DataFileServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        versionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        confirmEmailService:
          $ref: '#/components/schemas/ConfirmEmailServiceBean'
        session: {}
    MakeDataCountLoggingServiceBean:
      type: object
      properties:
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    MetadataBlock:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        displayName:
          type: string
        namespaceUri:
          type: string
        datasetFieldTypes:
          items:
            $ref: '#/components/schemas/DatasetFieldType'
        owner:
          $ref: '#/components/schemas/Dataverse'
        empty:
          type: boolean
        selected:
          type: boolean
        hasRequired:
          type: boolean
        showDatasetFieldTypes:
          type: boolean
    MetadataBlockServiceBean:
      type: object
      properties:
        em: {}
    NavigationWrapper:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/DataverseSession'
        redirectPage:
          type: string
    OAIRecordServiceBean:
      type: object
      properties:
        oaiSetService:
          $ref: '#/components/schemas/OAISetServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        em: {}
    OAISetServiceBean:
      type: object
      properties:
        em: {}
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        oaiRecordService:
          $ref: '#/components/schemas/OAIRecordServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
    OAuth2TokenData:
      type: object
      properties:
        id:
          type: number
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        oauthProviderId:
          type: string
        expiryDate: {}
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
        rawResponse:
          type: string
    OptionalAccessService:
      type: object
      properties:
        serviceName:
          type: string
        serviceDescription:
          type: string
        contentMimeType:
          type: string
        serviceArguments:
          type: string
    PasswordResetData:
      type: object
      properties:
        id:
          type: number
        token:
          type: string
        builtinUser:
          $ref: '#/components/schemas/BuiltinUser'
        created: {}
        expires: {}
        reason:
          $ref: '#/components/schemas/Reason'
    PasswordResetServiceBean:
      type: object
      properties:
        dataverseUserService:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        passwordValidatorService:
          $ref: '#/components/schemas/PasswordValidatorServiceBean'
        authService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        em: {}
    PasswordValidatorServiceBean:
      type: object
      properties:
        goodStrength:
          type: integer
        maxLength:
          type: integer
        minLength:
          type: integer
        numberOfCharacteristics:
          type: integer
        numberOfConsecutiveDigitsAllowed:
          type: integer
        characterRules:
          items:
            $ref: '#/components/schemas/CharacterRule'
        dictionaries:
          type: string
        messageResolver:
          $ref: '#/components/schemas/PropertiesMessageResolver'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    PermaLinkPidProviderServiceBean:
      type: object
      properties:
        authority:
          type: string
        separator:
          type: string
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        configured:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/AbstractGlobalIdServiceBean'
    PermissionServiceBean:
      type: object
      properties:
        userService:
          $ref: '#/components/schemas/BuiltinUserServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        roleService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        roleAssigneeService:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        dvObjectServiceBean:
          $ref: '#/components/schemas/DvObjectServiceBean'
        workflowService:
          $ref: '#/components/schemas/WorkflowServiceBean'
        em: {}
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        session:
          $ref: '#/components/schemas/DataverseSession'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
    PersistedGlobalGroup:
      type: object
      properties:
        id:
          type: number
        persistedGroupAlias:
          type: string
        displayName:
          type: string
        description:
          type: string
    PrivateUrlServiceBean:
      type: object
      properties:
        em: {}
        datasetServiceBean:
          $ref: '#/components/schemas/DatasetServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
    Reason:
      enum:
      - Ingest
      - Workflow
      - InReview
      - DcmUpload
      - GlobusUpload
      - finalizePublication
      - EditInProgress
      - FileValidationFailed
    RoleAssigneeServiceBean:
      type: object
      properties:
        em: {}
        authSvc:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        groupSvc:
          $ref: '#/components/schemas/GroupServiceBean'
        explicitGroupSvc:
          $ref: '#/components/schemas/ExplicitGroupServiceBean'
        dataverseRoleService:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        predefinedRoleAssignees: {}
    RoleAssignment:
      type: object
      properties:
        id:
          type: number
        assigneeIdentifier:
          type: string
        role:
          $ref: '#/components/schemas/DataverseRole'
        definitionPoint:
          $ref: '#/components/schemas/DvObject'
        privateUrlToken:
          type: string
        privateUrlAnonymizedAccess:
          type: boolean
    RoleAssignmentDTO:
      type: object
      properties:
        assignee:
          type: string
        role:
          type: string
    RoleDTO:
      type: object
      properties:
        alias:
          type: string
        name:
          type: string
        description:
          type: string
        ownerId:
          type: string
        permissions:
          type: string
    RunResultType:
      enum:
      - SUCCESS
      - FAILURE
      - INPROGRESS
      - INTERRUPTED
    SavedSearch:
      type: object
      properties:
        id:
          type: number
        query:
          type: string
        savedSearchFilterQueries:
          items:
            $ref: '#/components/schemas/SavedSearchFilterQuery'
        definitionPoint:
          $ref: '#/components/schemas/Dataverse'
        creator:
          $ref: '#/components/schemas/AuthenticatedUser'
    SavedSearchFilterQuery:
      type: object
      properties:
        id:
          type: number
        filterQuery:
          type: string
        savedSearch:
          $ref: '#/components/schemas/SavedSearch'
    SavedSearchServiceBean:
      type: object
      properties:
        searchService:
          $ref: '#/components/schemas/SearchServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        commandEngine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        resultString:
          type: string
        em: {}
    Scope:
      enum:
      - DATASET
      - FILE
    SearchPermissionsServiceBean:
      type: object
      properties:
        userServiceBean:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        permissionService:
          $ref: '#/components/schemas/PermissionServiceBean'
        roleAssigneeService:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        rolesSvc:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        authSvc:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        roleAssigneeCache: {}
    SearchServiceBean:
      type: object
      properties:
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        datasetVersionService:
          $ref: '#/components/schemas/DatasetVersionServiceBean'
        datasetFieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
    SettingsServiceBean:
      type: object
      properties:
        em: {}
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
    SettingsWrapper:
      type: object
      properties:
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        fieldService:
          $ref: '#/components/schemas/DatasetFieldServiceBean'
        mdbService:
          $ref: '#/components/schemas/MetadataBlockServiceBean'
        settingsMap: {}
        guidesBaseUrl:
          type: string
        embargoDateChecked:
          type: boolean
        maxEmbargoDate:
          type: object
        siteUrl:
          type: string
        rootDataverse:
          $ref: '#/components/schemas/Dataverse'
        guidesVersion:
          type: string
        appVersion:
          type: string
        appVersionWithBuildNumber:
          type: string
        shibPassiveLoginEnabled:
          type: boolean
        footerCopyrightAndYear:
          type: string
        cachedCvocMap: {}
        cachedCvocByTermFieldMap: {}
        zipDownloadLimit:
          type: number
        publicInstall:
          type: boolean
        uploadMethodsCount:
          type: integer
        rsyncUpload:
          type: boolean
        rsyncDownload:
          type: boolean
        globusUpload:
          type: boolean
        globusDownload:
          type: boolean
        globusFileDownload:
          type: boolean
        globusAppUrl:
          type: string
        globusStoreList:
          items:
            type: string
        httpUpload:
          type: boolean
        rsyncOnly:
          type: boolean
        webloaderUpload:
          type: boolean
        metricsUrl:
          type: string
        dataFilePIDSequentialDependent:
          type: boolean
        customLicenseAllowed:
          type: boolean
        systemMetadataBlocks:
          items:
            $ref: '#/components/schemas/MetadataBlock'
        alwaysMuted:
          items:
            $ref: '#/components/schemas/Type'
        neverMuted:
          items:
            $ref: '#/components/schemas/Type'
        configuredLocales: {}
        anonymizedFieldTypes:
          items:
            type: string
        languageMap: {}
        allowedExternalStatuses:
          items:
            type: string
    ShibGroupProvider:
      type: object
      properties:
        shibGroupService:
          $ref: '#/components/schemas/ShibGroupServiceBean'
    ShibGroupServiceBean:
      type: object
      properties:
        em: {}
        roleAssigneeSvc:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        groupService:
          $ref: '#/components/schemas/GroupServiceBean'
        actionLogSvc:
          $ref: '#/components/schemas/ActionLogServiceBean'
    SolrClientService:
      type: object
      properties:
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        solrClient:
          $ref: '#/components/schemas/SolrClient'
    SolrIndexServiceBean:
      type: object
      properties:
        dvObjectService:
          $ref: '#/components/schemas/DvObjectServiceBean'
        searchPermissionsService:
          $ref: '#/components/schemas/SearchPermissionsServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        datasetService:
          $ref: '#/components/schemas/DatasetServiceBean'
        rolesSvc:
          $ref: '#/components/schemas/DataverseRoleServiceBean'
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        solrClientService:
          $ref: '#/components/schemas/SolrClientService'
        unpublishedDataRelatedToMeModeEnabled:
          type: boolean
    SummaryStatistic:
      type: object
      properties:
        id:
          type: number
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        type:
          $ref: '#/components/schemas/SummaryStatisticType'
        value:
          type: string
    SummaryStatisticType:
      enum:
      - MEAN
      - MEDN
      - MODE
      - MIN
      - MAX
      - STDEV
      - VALD
      - INVD
    SystemConfig:
      type: object
      properties:
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
        dataverseService:
          $ref: '#/components/schemas/DataverseServiceBean'
        authenticationService:
          $ref: '#/components/schemas/AuthenticationServiceBean'
        buildNumber:
          type: string
    TagType:
      enum:
      - Survey
      - TimeSeries
      - Panel
      - Event
      - Genomics
      - Network
      - Geospatial
    Template:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        usageCount:
          type: number
        createTime: {}
        termsOfUseAndAccess:
          $ref: '#/components/schemas/TermsOfUseAndAccess'
        datasetFields:
          items:
            $ref: '#/components/schemas/DatasetField'
        instructions:
          type: string
        instructionsMap: {}
        metadataBlocksForView: {}
        metadataBlocksForEdit: {}
        isDefaultForDataverse:
          type: boolean
        dataversesHasAsDefault:
          items:
            $ref: '#/components/schemas/Dataverse'
        dataverse:
          $ref: '#/components/schemas/Dataverse'
    TemplateServiceBean:
      type: object
      properties:
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
        em: {}
    TermsOfUseAndAccess:
      type: object
      properties:
        id:
          type: number
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        template:
          $ref: '#/components/schemas/Template'
        license:
          $ref: '#/components/schemas/License'
        termsOfUse:
          type: string
        termsOfAccess:
          type: string
        confidentialityDeclaration:
          type: string
        specialPermissions:
          type: string
        restrictions:
          type: string
        citationRequirements:
          type: string
        depositorRequirements:
          type: string
        conditions:
          type: string
        disclaimer:
          type: string
        dataAccessPlace:
          type: string
        originalArchive:
          type: string
        availabilityStatus:
          type: string
        contactForAccess:
          type: string
        sizeOfCollection:
          type: string
        studyCompletion:
          type: string
        fileAccessRequest:
          type: boolean
        validationMessage:
          type: string
    Type:
      enum:
      - ASSIGNROLE
      - REVOKEROLE
      - CREATEDV
      - CREATEDS
      - CREATEACC
      - SUBMITTEDDS
      - RETURNEDDS
      - PUBLISHEDDS
      - REQUESTFILEACCESS
      - GRANTFILEACCESS
      - REJECTFILEACCESS
      - FILESYSTEMIMPORT
      - CHECKSUMIMPORT
      - CHECKSUMFAIL
      - CONFIRMEMAIL
      - APIGENERATED
      - INGESTCOMPLETED
      - INGESTCOMPLETEDWITHERRORS
      - PUBLISHFAILED_PIDREG
      - WORKFLOW_SUCCESS
      - WORKFLOW_FAILURE
      - STATUSUPDATED
      - DATASETCREATED
      - DATASETMENTIONED
      - GLOBUSUPLOADCOMPLETED
      - GLOBUSUPLOADCOMPLETEDWITHERRORS
      - GLOBUSDOWNLOADCOMPLETED
      - GLOBUSDOWNLOADCOMPLETEDWITHERRORS
    UserBannerMessage:
      type: object
      properties:
        id:
          type: number
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        bannerMessage:
          $ref: '#/components/schemas/BannerMessage'
        bannerDismissalTime: {}
    UserNotification:
      type: object
      properties:
        id:
          type: number
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
        requestor:
          $ref: '#/components/schemas/AuthenticatedUser'
        sendDate: {}
        readNotification:
          type: boolean
        type:
          $ref: '#/components/schemas/Type'
        objectId:
          type: number
        additionalInfo:
          type: string
        displayAsRead:
          type: boolean
        roleString:
          type: string
        emailed:
          type: boolean
        theObject:
          type: object
    UserNotificationServiceBean:
      type: object
      properties:
        mailService:
          $ref: '#/components/schemas/MailServiceBean'
        em: {}
        settingsService:
          $ref: '#/components/schemas/SettingsServiceBean'
    UserServiceBean:
      type: object
      properties:
        em: {}
        indexService:
          $ref: '#/components/schemas/IndexServiceBean'
    VarGroup:
      type: object
      properties:
        id:
          type: number
        label:
          type: string
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        varsInGroup:
          items:
            $ref: '#/components/schemas/DataVariable'
    VariableCategory:
      type: object
      properties:
        id:
          type: number
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        value:
          type: string
        label:
          type: string
        missing:
          type: boolean
        catOrder:
          type: integer
        frequency:
          type: number
    VariableInterval:
      enum:
      - DISCRETE
      - CONTINUOUS
      - NOMINAL
      - DICHOTOMOUS
    VariableMetadata:
      type: object
      properties:
        id:
          type: number
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        label:
          type: string
        literalquestion:
          type: string
        postquestion:
          type: string
        interviewinstruction:
          type: string
        universe:
          type: string
        notes:
          type: string
        isweightvar:
          type: boolean
        weighted:
          type: boolean
        categoriesMetadata:
          items:
            $ref: '#/components/schemas/CategoryMetadata'
        weightvariable:
          $ref: '#/components/schemas/DataVariable'
    VariableMetadataUtil:
      type: object
    VariableRange:
      type: object
      properties:
        id:
          type: number
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
        beginValue:
          type: string
        endValue:
          type: string
        beginValueType:
          $ref: '#/components/schemas/VariableRangeType'
        endValueType:
          $ref: '#/components/schemas/VariableRangeType'
    VariableRangeItem:
      type: object
      properties:
        id:
          type: number
        value: {}
        dataVariable:
          $ref: '#/components/schemas/DataVariable'
    VariableRangeType:
      enum:
      - MIN
      - MAX
      - MIN_EXCLUSIVE
      - MAX_EXCLUSIVE
      - POINT
    VariableServiceBean:
      type: object
      properties:
        em: {}
    VariableType:
      enum:
      - NUMERIC
      - CHARACTER
    VersionState:
      enum:
      - DRAFT
      - RELEASED
      - ARCHIVED
      - DEACCESSIONED
    WorkflowComment:
      type: object
      properties:
        id:
          type: number
        datasetVersion:
          $ref: '#/components/schemas/DatasetVersion'
        type:
          $ref: '#/components/schemas/Type'
        message:
          type: string
        authenticatedUser:
          $ref: '#/components/schemas/AuthenticatedUser'
        created: {}
        toBeShown:
          type: boolean
    WorkflowServiceBean:
      type: object
      properties:
        em: {}
        datasets:
          $ref: '#/components/schemas/DatasetServiceBean'
        settings:
          $ref: '#/components/schemas/SettingsServiceBean'
        roleAssignees:
          $ref: '#/components/schemas/RoleAssigneeServiceBean'
        systemConfig:
          $ref: '#/components/schemas/SystemConfig'
        userNotificationService:
          $ref: '#/components/schemas/UserNotificationServiceBean'
        engine:
          $ref: '#/components/schemas/EjbDataverseEngine'
        dvRequestService:
          $ref: '#/components/schemas/DataverseRequestServiceBean'
        providers: {}
    datasetFileDifferenceItem:
      type: object
      properties:
        fileId:
          type: string
        fileChecksumType:
          $ref: '#/components/schemas/ChecksumType'
        fileChecksumValue:
          type: string
        fileName1:
          type: string
        fileType1:
          type: string
        fileSize1:
          type: string
        fileCat1:
          type: string
        fileDesc1:
          type: string
        fileProvFree1:
          type: string
        fileRest1:
          type: string
        fileName2:
          type: string
        fileType2:
          type: string
        fileSize2:
          type: string
        fileCat2:
          type: string
        fileDesc2:
          type: string
        fileProvFree2:
          type: string
        fileRest2:
          type: string
        file1Empty:
          type: boolean
        file2Empty:
          type: boolean
    datasetReplaceFileItem:
      type: object
      properties:
        fdi:
          $ref: '#/components/schemas/datasetFileDifferenceItem'
        leftColumn:
          type: string
        file1Id:
          type: string
        file2Id:
          type: string
        file1ChecksumType:
          $ref: '#/components/schemas/ChecksumType'
        file2ChecksumType:
          $ref: '#/components/schemas/ChecksumType'
        file1ChecksumValue:
          type: string
        file2ChecksumValue:
          type: string