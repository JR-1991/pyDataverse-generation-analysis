/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type RoleAssignmentDTO = {
    assignee?: string | undefined;
    role?: string | undefined;
};

/** @internal */
export namespace RoleAssignmentDTO$ {
    export type Inbound = {
        assignee?: string | undefined;
        role?: string | undefined;
    };

    export const inboundSchema: z.ZodType<RoleAssignmentDTO, z.ZodTypeDef, Inbound> = z
        .object({
            assignee: z.string().optional(),
            role: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.role === undefined ? null : { role: v.role }),
            };
        });

    export type Outbound = {
        assignee?: string | undefined;
        role?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RoleAssignmentDTO> = z
        .object({
            assignee: z.string().optional(),
            role: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.role === undefined ? null : { role: v.role }),
            };
        });
}
